
atmega2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000010a8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000001ee  00800060  000010a8  0000113c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000040  0080024e  0080024e  0000132a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000132a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000135c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d0  00000000  00000000  00001398  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001a17  00000000  00000000  00001468  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000075e  00000000  00000000  00002e7f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dbb  00000000  00000000  000035dd  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001f8  00000000  00000000  00004398  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000539  00000000  00000000  00004590  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000165f  00000000  00000000  00004ac9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000230  00000000  00000000  00006128  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__ctors_end>
       4:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
       8:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
       c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      10:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      14:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      18:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      1c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      20:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      24:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      28:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      2c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      30:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      34:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      38:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      3c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      40:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      44:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      48:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      4c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      50:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>

00000054 <__trampolines_end>:
      54:	00 40       	sbci	r16, 0x00	; 0
      56:	7a 10       	cpse	r7, r10
      58:	f3 5a       	subi	r31, 0xA3	; 163
      5a:	00 a0       	ldd	r0, Z+32	; 0x20
      5c:	72 4e       	sbci	r23, 0xE2	; 226
      5e:	18 09       	sbc	r17, r8
      60:	00 10       	cpse	r0, r0
      62:	a5 d4       	rcall	.+2378   	; 0x9ae <__stack+0x14f>
      64:	e8 00       	.word	0x00e8	; ????
      66:	00 e8       	ldi	r16, 0x80	; 128
      68:	76 48       	sbci	r23, 0x86	; 134
      6a:	17 00       	.word	0x0017	; ????
      6c:	00 e4       	ldi	r16, 0x40	; 64
      6e:	0b 54       	subi	r16, 0x4B	; 75
      70:	02 00       	.word	0x0002	; ????
      72:	00 ca       	rjmp	.-3072   	; 0xfffff474 <__eeprom_end+0xff7ef474>
      74:	9a 3b       	cpi	r25, 0xBA	; 186
      76:	00 00       	nop
      78:	00 e1       	ldi	r16, 0x10	; 16
      7a:	f5 05       	cpc	r31, r5
      7c:	00 00       	nop
      7e:	80 96       	adiw	r24, 0x20	; 32
      80:	98 00       	.word	0x0098	; ????
      82:	00 00       	nop
      84:	40 42       	sbci	r20, 0x20	; 32
      86:	0f 00       	.word	0x000f	; ????
      88:	00 00       	nop
      8a:	a0 86       	std	Z+8, r10	; 0x08
      8c:	01 00       	.word	0x0001	; ????
      8e:	00 00       	nop
      90:	10 27       	eor	r17, r16
      92:	00 00       	nop
      94:	00 00       	nop
      96:	e8 03       	fmulsu	r22, r16
      98:	00 00       	nop
      9a:	00 00       	nop
      9c:	64 00       	.word	0x0064	; ????
      9e:	00 00       	nop
      a0:	00 00       	nop
      a2:	0a 00       	.word	0x000a	; ????
      a4:	00 00       	nop
      a6:	00 00       	nop
      a8:	01 00       	.word	0x0001	; ????
      aa:	00 00       	nop
      ac:	00 00       	nop
      ae:	2c 76       	andi	r18, 0x6C	; 108
      b0:	d8 88       	ldd	r13, Y+16	; 0x10
      b2:	dc 67       	ori	r29, 0x7C	; 124
      b4:	4f 08       	sbc	r4, r15
      b6:	23 df       	rcall	.-442    	; 0xfffffefe <__eeprom_end+0xff7efefe>
      b8:	c1 df       	rcall	.-126    	; 0x3c <__FUSE_REGION_LENGTH__+0x3a>
      ba:	ae 59       	subi	r26, 0x9E	; 158
      bc:	e1 b1       	in	r30, 0x01	; 1
      be:	b7 96       	adiw	r30, 0x27	; 39
      c0:	e5 e3       	ldi	r30, 0x35	; 53
      c2:	e4 53       	subi	r30, 0x34	; 52
      c4:	c6 3a       	cpi	r28, 0xA6	; 166
      c6:	e6 51       	subi	r30, 0x16	; 22
      c8:	99 76       	andi	r25, 0x69	; 105
      ca:	96 e8       	ldi	r25, 0x86	; 134
      cc:	e6 c2       	rjmp	.+1484   	; 0x69a <Lcd4_Write_Char+0x20>
      ce:	84 26       	eor	r8, r20
      d0:	eb 89       	ldd	r30, Y+19	; 0x13
      d2:	8c 9b       	sbis	0x11, 4	; 17
      d4:	62 ed       	ldi	r22, 0xD2	; 210
      d6:	40 7c       	andi	r20, 0xC0	; 192
      d8:	6f fc       	.word	0xfc6f	; ????
      da:	ef bc       	out	0x2f, r14	; 47
      dc:	9c 9f       	mul	r25, r28
      de:	40 f2       	brcs	.-112    	; 0x70 <__trampolines_end+0x1c>
      e0:	ba a5       	ldd	r27, Y+42	; 0x2a
      e2:	6f a5       	ldd	r22, Y+47	; 0x2f
      e4:	f4 90       	lpm	r15, Z
      e6:	05 5a       	subi	r16, 0xA5	; 165
      e8:	2a f7       	brpl	.-54     	; 0xb4 <__trampolines_end+0x60>
      ea:	5c 93       	st	X, r21
      ec:	6b 6c       	ori	r22, 0xCB	; 203
      ee:	f9 67       	ori	r31, 0x79	; 121
      f0:	6d c1       	rjmp	.+730    	; 0x3cc <pinChange+0x240>
      f2:	1b fc       	.word	0xfc1b	; ????
      f4:	e0 e4       	ldi	r30, 0x40	; 64
      f6:	0d 47       	sbci	r16, 0x7D	; 125
      f8:	fe f5       	brtc	.+126    	; 0x178 <.do_clear_bss_loop>
      fa:	20 e6       	ldi	r18, 0x60	; 96
      fc:	b5 00       	.word	0x00b5	; ????
      fe:	d0 ed       	ldi	r29, 0xD0	; 208
     100:	90 2e       	mov	r9, r16
     102:	03 00       	.word	0x0003	; ????
     104:	94 35       	cpi	r25, 0x54	; 84
     106:	77 05       	cpc	r23, r7
     108:	00 80       	ld	r0, Z
     10a:	84 1e       	adc	r8, r20
     10c:	08 00       	.word	0x0008	; ????
     10e:	00 20       	and	r0, r0
     110:	4e 0a       	sbc	r4, r30
     112:	00 00       	nop
     114:	00 c8       	rjmp	.-4096   	; 0xfffff116 <__eeprom_end+0xff7ef116>
     116:	0c 33       	cpi	r16, 0x3C	; 60
     118:	33 33       	cpi	r19, 0x33	; 51
     11a:	33 0f       	add	r19, r19
     11c:	98 6e       	ori	r25, 0xE8	; 232
     11e:	12 83       	std	Z+2, r17	; 0x02
     120:	11 41       	sbci	r17, 0x11	; 17
     122:	ef 8d       	ldd	r30, Y+31	; 0x1f
     124:	21 14       	cp	r2, r1
     126:	89 3b       	cpi	r24, 0xB9	; 185
     128:	e6 55       	subi	r30, 0x56	; 86
     12a:	16 cf       	rjmp	.-468    	; 0xffffff58 <__eeprom_end+0xff7eff58>
     12c:	fe e6       	ldi	r31, 0x6E	; 110
     12e:	db 18       	sub	r13, r11
     130:	d1 84       	ldd	r13, Z+9	; 0x09
     132:	4b 38       	cpi	r20, 0x8B	; 139
     134:	1b f7       	brvc	.-58     	; 0xfc <__trampolines_end+0xa8>
     136:	7c 1d       	adc	r23, r12
     138:	90 1d       	adc	r25, r0
     13a:	a4 bb       	out	0x14, r26	; 20
     13c:	e4 24       	eor	r14, r4
     13e:	20 32       	cpi	r18, 0x20	; 32
     140:	84 72       	andi	r24, 0x24	; 36
     142:	5e 22       	and	r5, r30
     144:	81 00       	.word	0x0081	; ????
     146:	c9 f1       	breq	.+114    	; 0x1ba <pinChange+0x2e>
     148:	24 ec       	ldi	r18, 0xC4	; 196
     14a:	a1 e5       	ldi	r26, 0x51	; 81
     14c:	3d 27       	eor	r19, r29

0000014e <__ctors_end>:
     14e:	11 24       	eor	r1, r1
     150:	1f be       	out	0x3f, r1	; 63
     152:	cf e5       	ldi	r28, 0x5F	; 95
     154:	d8 e0       	ldi	r29, 0x08	; 8
     156:	de bf       	out	0x3e, r29	; 62
     158:	cd bf       	out	0x3d, r28	; 61

0000015a <__do_copy_data>:
     15a:	12 e0       	ldi	r17, 0x02	; 2
     15c:	a0 e6       	ldi	r26, 0x60	; 96
     15e:	b0 e0       	ldi	r27, 0x00	; 0
     160:	e8 ea       	ldi	r30, 0xA8	; 168
     162:	f0 e1       	ldi	r31, 0x10	; 16
     164:	02 c0       	rjmp	.+4      	; 0x16a <__do_copy_data+0x10>
     166:	05 90       	lpm	r0, Z+
     168:	0d 92       	st	X+, r0
     16a:	ae 34       	cpi	r26, 0x4E	; 78
     16c:	b1 07       	cpc	r27, r17
     16e:	d9 f7       	brne	.-10     	; 0x166 <__do_copy_data+0xc>

00000170 <__do_clear_bss>:
     170:	22 e0       	ldi	r18, 0x02	; 2
     172:	ae e4       	ldi	r26, 0x4E	; 78
     174:	b2 e0       	ldi	r27, 0x02	; 2
     176:	01 c0       	rjmp	.+2      	; 0x17a <.do_clear_bss_start>

00000178 <.do_clear_bss_loop>:
     178:	1d 92       	st	X+, r1

0000017a <.do_clear_bss_start>:
     17a:	ae 38       	cpi	r26, 0x8E	; 142
     17c:	b2 07       	cpc	r27, r18
     17e:	e1 f7       	brne	.-8      	; 0x178 <.do_clear_bss_loop>
     180:	0e 94 a6 03 	call	0x74c	; 0x74c <main>
     184:	0c 94 52 08 	jmp	0x10a4	; 0x10a4 <_exit>

00000188 <__bad_interrupt>:
     188:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000018c <pinChange>:
		if(current_shape_array[row][j] == TRUE){
			col_value |= 1<<(j);
		}
	}
	return col_value;
}
     18c:	67 2b       	or	r22, r23
     18e:	09 f0       	breq	.+2      	; 0x192 <pinChange+0x6>
     190:	df c0       	rjmp	.+446    	; 0x350 <pinChange+0x1c4>
     192:	00 97       	sbiw	r24, 0x00	; 0
     194:	21 f4       	brne	.+8      	; 0x19e <pinChange+0x12>
     196:	8b b3       	in	r24, 0x1b	; 27
     198:	8e 7f       	andi	r24, 0xFE	; 254
     19a:	8b bb       	out	0x1b, r24	; 27
     19c:	08 95       	ret
     19e:	81 30       	cpi	r24, 0x01	; 1
     1a0:	91 05       	cpc	r25, r1
     1a2:	21 f4       	brne	.+8      	; 0x1ac <pinChange+0x20>
     1a4:	8b b3       	in	r24, 0x1b	; 27
     1a6:	8d 7f       	andi	r24, 0xFD	; 253
     1a8:	8b bb       	out	0x1b, r24	; 27
     1aa:	08 95       	ret
     1ac:	82 30       	cpi	r24, 0x02	; 2
     1ae:	91 05       	cpc	r25, r1
     1b0:	21 f4       	brne	.+8      	; 0x1ba <pinChange+0x2e>
     1b2:	8b b3       	in	r24, 0x1b	; 27
     1b4:	8b 7f       	andi	r24, 0xFB	; 251
     1b6:	8b bb       	out	0x1b, r24	; 27
     1b8:	08 95       	ret
     1ba:	83 30       	cpi	r24, 0x03	; 3
     1bc:	91 05       	cpc	r25, r1
     1be:	21 f4       	brne	.+8      	; 0x1c8 <pinChange+0x3c>
     1c0:	8b b3       	in	r24, 0x1b	; 27
     1c2:	87 7f       	andi	r24, 0xF7	; 247
     1c4:	8b bb       	out	0x1b, r24	; 27
     1c6:	08 95       	ret
     1c8:	84 30       	cpi	r24, 0x04	; 4
     1ca:	91 05       	cpc	r25, r1
     1cc:	21 f4       	brne	.+8      	; 0x1d6 <pinChange+0x4a>
     1ce:	8b b3       	in	r24, 0x1b	; 27
     1d0:	8f 7e       	andi	r24, 0xEF	; 239
     1d2:	8b bb       	out	0x1b, r24	; 27
     1d4:	08 95       	ret
     1d6:	85 30       	cpi	r24, 0x05	; 5
     1d8:	91 05       	cpc	r25, r1
     1da:	21 f4       	brne	.+8      	; 0x1e4 <pinChange+0x58>
     1dc:	8b b3       	in	r24, 0x1b	; 27
     1de:	8f 7d       	andi	r24, 0xDF	; 223
     1e0:	8b bb       	out	0x1b, r24	; 27
     1e2:	08 95       	ret
     1e4:	86 30       	cpi	r24, 0x06	; 6
     1e6:	91 05       	cpc	r25, r1
     1e8:	21 f4       	brne	.+8      	; 0x1f2 <pinChange+0x66>
     1ea:	8b b3       	in	r24, 0x1b	; 27
     1ec:	8f 7b       	andi	r24, 0xBF	; 191
     1ee:	8b bb       	out	0x1b, r24	; 27
     1f0:	08 95       	ret
     1f2:	87 30       	cpi	r24, 0x07	; 7
     1f4:	91 05       	cpc	r25, r1
     1f6:	21 f4       	brne	.+8      	; 0x200 <pinChange+0x74>
     1f8:	8b b3       	in	r24, 0x1b	; 27
     1fa:	8f 77       	andi	r24, 0x7F	; 127
     1fc:	8b bb       	out	0x1b, r24	; 27
     1fe:	08 95       	ret
     200:	8a 30       	cpi	r24, 0x0A	; 10
     202:	91 05       	cpc	r25, r1
     204:	21 f4       	brne	.+8      	; 0x20e <pinChange+0x82>
     206:	88 b3       	in	r24, 0x18	; 24
     208:	8e 7f       	andi	r24, 0xFE	; 254
     20a:	88 bb       	out	0x18, r24	; 24
     20c:	08 95       	ret
     20e:	8b 30       	cpi	r24, 0x0B	; 11
     210:	91 05       	cpc	r25, r1
     212:	21 f4       	brne	.+8      	; 0x21c <pinChange+0x90>
     214:	88 b3       	in	r24, 0x18	; 24
     216:	8d 7f       	andi	r24, 0xFD	; 253
     218:	88 bb       	out	0x18, r24	; 24
     21a:	08 95       	ret
     21c:	8c 30       	cpi	r24, 0x0C	; 12
     21e:	91 05       	cpc	r25, r1
     220:	21 f4       	brne	.+8      	; 0x22a <pinChange+0x9e>
     222:	88 b3       	in	r24, 0x18	; 24
     224:	8b 7f       	andi	r24, 0xFB	; 251
     226:	88 bb       	out	0x18, r24	; 24
     228:	08 95       	ret
     22a:	8d 30       	cpi	r24, 0x0D	; 13
     22c:	91 05       	cpc	r25, r1
     22e:	21 f4       	brne	.+8      	; 0x238 <pinChange+0xac>
     230:	88 b3       	in	r24, 0x18	; 24
     232:	87 7f       	andi	r24, 0xF7	; 247
     234:	88 bb       	out	0x18, r24	; 24
     236:	08 95       	ret
     238:	8e 30       	cpi	r24, 0x0E	; 14
     23a:	91 05       	cpc	r25, r1
     23c:	21 f4       	brne	.+8      	; 0x246 <pinChange+0xba>
     23e:	88 b3       	in	r24, 0x18	; 24
     240:	8f 7e       	andi	r24, 0xEF	; 239
     242:	88 bb       	out	0x18, r24	; 24
     244:	08 95       	ret
     246:	8f 30       	cpi	r24, 0x0F	; 15
     248:	91 05       	cpc	r25, r1
     24a:	21 f4       	brne	.+8      	; 0x254 <pinChange+0xc8>
     24c:	88 b3       	in	r24, 0x18	; 24
     24e:	8f 7d       	andi	r24, 0xDF	; 223
     250:	88 bb       	out	0x18, r24	; 24
     252:	08 95       	ret
     254:	80 31       	cpi	r24, 0x10	; 16
     256:	91 05       	cpc	r25, r1
     258:	21 f4       	brne	.+8      	; 0x262 <pinChange+0xd6>
     25a:	88 b3       	in	r24, 0x18	; 24
     25c:	8f 7b       	andi	r24, 0xBF	; 191
     25e:	88 bb       	out	0x18, r24	; 24
     260:	08 95       	ret
     262:	81 31       	cpi	r24, 0x11	; 17
     264:	91 05       	cpc	r25, r1
     266:	21 f4       	brne	.+8      	; 0x270 <pinChange+0xe4>
     268:	88 b3       	in	r24, 0x18	; 24
     26a:	8f 77       	andi	r24, 0x7F	; 127
     26c:	88 bb       	out	0x18, r24	; 24
     26e:	08 95       	ret
     270:	84 31       	cpi	r24, 0x14	; 20
     272:	91 05       	cpc	r25, r1
     274:	21 f4       	brne	.+8      	; 0x27e <pinChange+0xf2>
     276:	85 b3       	in	r24, 0x15	; 21
     278:	8e 7f       	andi	r24, 0xFE	; 254
     27a:	85 bb       	out	0x15, r24	; 21
     27c:	08 95       	ret
     27e:	85 31       	cpi	r24, 0x15	; 21
     280:	91 05       	cpc	r25, r1
     282:	21 f4       	brne	.+8      	; 0x28c <pinChange+0x100>
     284:	85 b3       	in	r24, 0x15	; 21
     286:	8d 7f       	andi	r24, 0xFD	; 253
     288:	85 bb       	out	0x15, r24	; 21
     28a:	08 95       	ret
     28c:	86 31       	cpi	r24, 0x16	; 22
     28e:	91 05       	cpc	r25, r1
     290:	21 f4       	brne	.+8      	; 0x29a <pinChange+0x10e>
     292:	85 b3       	in	r24, 0x15	; 21
     294:	8b 7f       	andi	r24, 0xFB	; 251
     296:	85 bb       	out	0x15, r24	; 21
     298:	08 95       	ret
     29a:	87 31       	cpi	r24, 0x17	; 23
     29c:	91 05       	cpc	r25, r1
     29e:	21 f4       	brne	.+8      	; 0x2a8 <pinChange+0x11c>
     2a0:	85 b3       	in	r24, 0x15	; 21
     2a2:	87 7f       	andi	r24, 0xF7	; 247
     2a4:	85 bb       	out	0x15, r24	; 21
     2a6:	08 95       	ret
     2a8:	88 31       	cpi	r24, 0x18	; 24
     2aa:	91 05       	cpc	r25, r1
     2ac:	21 f4       	brne	.+8      	; 0x2b6 <pinChange+0x12a>
     2ae:	85 b3       	in	r24, 0x15	; 21
     2b0:	8f 7e       	andi	r24, 0xEF	; 239
     2b2:	85 bb       	out	0x15, r24	; 21
     2b4:	08 95       	ret
     2b6:	89 31       	cpi	r24, 0x19	; 25
     2b8:	91 05       	cpc	r25, r1
     2ba:	21 f4       	brne	.+8      	; 0x2c4 <pinChange+0x138>
     2bc:	85 b3       	in	r24, 0x15	; 21
     2be:	8f 7d       	andi	r24, 0xDF	; 223
     2c0:	85 bb       	out	0x15, r24	; 21
     2c2:	08 95       	ret
     2c4:	8a 31       	cpi	r24, 0x1A	; 26
     2c6:	91 05       	cpc	r25, r1
     2c8:	21 f4       	brne	.+8      	; 0x2d2 <pinChange+0x146>
     2ca:	85 b3       	in	r24, 0x15	; 21
     2cc:	8f 7b       	andi	r24, 0xBF	; 191
     2ce:	85 bb       	out	0x15, r24	; 21
     2d0:	08 95       	ret
     2d2:	8b 31       	cpi	r24, 0x1B	; 27
     2d4:	91 05       	cpc	r25, r1
     2d6:	21 f4       	brne	.+8      	; 0x2e0 <pinChange+0x154>
     2d8:	85 b3       	in	r24, 0x15	; 21
     2da:	8f 77       	andi	r24, 0x7F	; 127
     2dc:	85 bb       	out	0x15, r24	; 21
     2de:	08 95       	ret
     2e0:	8e 31       	cpi	r24, 0x1E	; 30
     2e2:	91 05       	cpc	r25, r1
     2e4:	21 f4       	brne	.+8      	; 0x2ee <pinChange+0x162>
     2e6:	82 b3       	in	r24, 0x12	; 18
     2e8:	8e 7f       	andi	r24, 0xFE	; 254
     2ea:	82 bb       	out	0x12, r24	; 18
     2ec:	08 95       	ret
     2ee:	8f 31       	cpi	r24, 0x1F	; 31
     2f0:	91 05       	cpc	r25, r1
     2f2:	21 f4       	brne	.+8      	; 0x2fc <pinChange+0x170>
     2f4:	82 b3       	in	r24, 0x12	; 18
     2f6:	8d 7f       	andi	r24, 0xFD	; 253
     2f8:	82 bb       	out	0x12, r24	; 18
     2fa:	08 95       	ret
     2fc:	80 32       	cpi	r24, 0x20	; 32
     2fe:	91 05       	cpc	r25, r1
     300:	21 f4       	brne	.+8      	; 0x30a <pinChange+0x17e>
     302:	82 b3       	in	r24, 0x12	; 18
     304:	8b 7f       	andi	r24, 0xFB	; 251
     306:	82 bb       	out	0x12, r24	; 18
     308:	08 95       	ret
     30a:	81 32       	cpi	r24, 0x21	; 33
     30c:	91 05       	cpc	r25, r1
     30e:	21 f4       	brne	.+8      	; 0x318 <pinChange+0x18c>
     310:	82 b3       	in	r24, 0x12	; 18
     312:	87 7f       	andi	r24, 0xF7	; 247
     314:	82 bb       	out	0x12, r24	; 18
     316:	08 95       	ret
     318:	82 32       	cpi	r24, 0x22	; 34
     31a:	91 05       	cpc	r25, r1
     31c:	21 f4       	brne	.+8      	; 0x326 <pinChange+0x19a>
     31e:	82 b3       	in	r24, 0x12	; 18
     320:	8f 7e       	andi	r24, 0xEF	; 239
     322:	82 bb       	out	0x12, r24	; 18
     324:	08 95       	ret
     326:	83 32       	cpi	r24, 0x23	; 35
     328:	91 05       	cpc	r25, r1
     32a:	21 f4       	brne	.+8      	; 0x334 <pinChange+0x1a8>
     32c:	82 b3       	in	r24, 0x12	; 18
     32e:	8f 7d       	andi	r24, 0xDF	; 223
     330:	82 bb       	out	0x12, r24	; 18
     332:	08 95       	ret
     334:	84 32       	cpi	r24, 0x24	; 36
     336:	91 05       	cpc	r25, r1
     338:	21 f4       	brne	.+8      	; 0x342 <pinChange+0x1b6>
     33a:	82 b3       	in	r24, 0x12	; 18
     33c:	8f 7b       	andi	r24, 0xBF	; 191
     33e:	82 bb       	out	0x12, r24	; 18
     340:	08 95       	ret
     342:	85 97       	sbiw	r24, 0x25	; 37
     344:	09 f0       	breq	.+2      	; 0x348 <pinChange+0x1bc>
     346:	e1 c0       	rjmp	.+450    	; 0x50a <__EEPROM_REGION_LENGTH__+0x10a>
     348:	82 b3       	in	r24, 0x12	; 18
     34a:	8f 77       	andi	r24, 0x7F	; 127
     34c:	82 bb       	out	0x12, r24	; 18
     34e:	08 95       	ret
     350:	00 97       	sbiw	r24, 0x00	; 0
     352:	21 f4       	brne	.+8      	; 0x35c <pinChange+0x1d0>
     354:	8b b3       	in	r24, 0x1b	; 27
     356:	81 60       	ori	r24, 0x01	; 1
     358:	8b bb       	out	0x1b, r24	; 27
     35a:	08 95       	ret
     35c:	81 30       	cpi	r24, 0x01	; 1
     35e:	91 05       	cpc	r25, r1
     360:	21 f4       	brne	.+8      	; 0x36a <pinChange+0x1de>
     362:	8b b3       	in	r24, 0x1b	; 27
     364:	82 60       	ori	r24, 0x02	; 2
     366:	8b bb       	out	0x1b, r24	; 27
     368:	08 95       	ret
     36a:	82 30       	cpi	r24, 0x02	; 2
     36c:	91 05       	cpc	r25, r1
     36e:	21 f4       	brne	.+8      	; 0x378 <pinChange+0x1ec>
     370:	8b b3       	in	r24, 0x1b	; 27
     372:	84 60       	ori	r24, 0x04	; 4
     374:	8b bb       	out	0x1b, r24	; 27
     376:	08 95       	ret
     378:	83 30       	cpi	r24, 0x03	; 3
     37a:	91 05       	cpc	r25, r1
     37c:	21 f4       	brne	.+8      	; 0x386 <pinChange+0x1fa>
     37e:	8b b3       	in	r24, 0x1b	; 27
     380:	88 60       	ori	r24, 0x08	; 8
     382:	8b bb       	out	0x1b, r24	; 27
     384:	08 95       	ret
     386:	84 30       	cpi	r24, 0x04	; 4
     388:	91 05       	cpc	r25, r1
     38a:	21 f4       	brne	.+8      	; 0x394 <pinChange+0x208>
     38c:	8b b3       	in	r24, 0x1b	; 27
     38e:	80 61       	ori	r24, 0x10	; 16
     390:	8b bb       	out	0x1b, r24	; 27
     392:	08 95       	ret
     394:	85 30       	cpi	r24, 0x05	; 5
     396:	91 05       	cpc	r25, r1
     398:	21 f4       	brne	.+8      	; 0x3a2 <pinChange+0x216>
     39a:	8b b3       	in	r24, 0x1b	; 27
     39c:	80 62       	ori	r24, 0x20	; 32
     39e:	8b bb       	out	0x1b, r24	; 27
     3a0:	08 95       	ret
     3a2:	86 30       	cpi	r24, 0x06	; 6
     3a4:	91 05       	cpc	r25, r1
     3a6:	21 f4       	brne	.+8      	; 0x3b0 <pinChange+0x224>
     3a8:	8b b3       	in	r24, 0x1b	; 27
     3aa:	80 64       	ori	r24, 0x40	; 64
     3ac:	8b bb       	out	0x1b, r24	; 27
     3ae:	08 95       	ret
     3b0:	87 30       	cpi	r24, 0x07	; 7
     3b2:	91 05       	cpc	r25, r1
     3b4:	21 f4       	brne	.+8      	; 0x3be <pinChange+0x232>
     3b6:	8b b3       	in	r24, 0x1b	; 27
     3b8:	80 68       	ori	r24, 0x80	; 128
     3ba:	8b bb       	out	0x1b, r24	; 27
     3bc:	08 95       	ret
     3be:	8a 30       	cpi	r24, 0x0A	; 10
     3c0:	91 05       	cpc	r25, r1
     3c2:	21 f4       	brne	.+8      	; 0x3cc <pinChange+0x240>
     3c4:	88 b3       	in	r24, 0x18	; 24
     3c6:	81 60       	ori	r24, 0x01	; 1
     3c8:	88 bb       	out	0x18, r24	; 24
     3ca:	08 95       	ret
     3cc:	8b 30       	cpi	r24, 0x0B	; 11
     3ce:	91 05       	cpc	r25, r1
     3d0:	21 f4       	brne	.+8      	; 0x3da <pinChange+0x24e>
     3d2:	88 b3       	in	r24, 0x18	; 24
     3d4:	82 60       	ori	r24, 0x02	; 2
     3d6:	88 bb       	out	0x18, r24	; 24
     3d8:	08 95       	ret
     3da:	8c 30       	cpi	r24, 0x0C	; 12
     3dc:	91 05       	cpc	r25, r1
     3de:	21 f4       	brne	.+8      	; 0x3e8 <pinChange+0x25c>
     3e0:	88 b3       	in	r24, 0x18	; 24
     3e2:	84 60       	ori	r24, 0x04	; 4
     3e4:	88 bb       	out	0x18, r24	; 24
     3e6:	08 95       	ret
     3e8:	8d 30       	cpi	r24, 0x0D	; 13
     3ea:	91 05       	cpc	r25, r1
     3ec:	21 f4       	brne	.+8      	; 0x3f6 <pinChange+0x26a>
     3ee:	88 b3       	in	r24, 0x18	; 24
     3f0:	88 60       	ori	r24, 0x08	; 8
     3f2:	88 bb       	out	0x18, r24	; 24
     3f4:	08 95       	ret
     3f6:	8e 30       	cpi	r24, 0x0E	; 14
     3f8:	91 05       	cpc	r25, r1
     3fa:	21 f4       	brne	.+8      	; 0x404 <__EEPROM_REGION_LENGTH__+0x4>
     3fc:	88 b3       	in	r24, 0x18	; 24
     3fe:	80 61       	ori	r24, 0x10	; 16
     400:	88 bb       	out	0x18, r24	; 24
     402:	08 95       	ret
     404:	8f 30       	cpi	r24, 0x0F	; 15
     406:	91 05       	cpc	r25, r1
     408:	21 f4       	brne	.+8      	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
     40a:	88 b3       	in	r24, 0x18	; 24
     40c:	80 62       	ori	r24, 0x20	; 32
     40e:	88 bb       	out	0x18, r24	; 24
     410:	08 95       	ret
     412:	80 31       	cpi	r24, 0x10	; 16
     414:	91 05       	cpc	r25, r1
     416:	21 f4       	brne	.+8      	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
     418:	88 b3       	in	r24, 0x18	; 24
     41a:	80 64       	ori	r24, 0x40	; 64
     41c:	88 bb       	out	0x18, r24	; 24
     41e:	08 95       	ret
     420:	81 31       	cpi	r24, 0x11	; 17
     422:	91 05       	cpc	r25, r1
     424:	21 f4       	brne	.+8      	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
     426:	88 b3       	in	r24, 0x18	; 24
     428:	80 68       	ori	r24, 0x80	; 128
     42a:	88 bb       	out	0x18, r24	; 24
     42c:	08 95       	ret
     42e:	84 31       	cpi	r24, 0x14	; 20
     430:	91 05       	cpc	r25, r1
     432:	21 f4       	brne	.+8      	; 0x43c <__EEPROM_REGION_LENGTH__+0x3c>
     434:	85 b3       	in	r24, 0x15	; 21
     436:	81 60       	ori	r24, 0x01	; 1
     438:	85 bb       	out	0x15, r24	; 21
     43a:	08 95       	ret
     43c:	85 31       	cpi	r24, 0x15	; 21
     43e:	91 05       	cpc	r25, r1
     440:	21 f4       	brne	.+8      	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
     442:	85 b3       	in	r24, 0x15	; 21
     444:	82 60       	ori	r24, 0x02	; 2
     446:	85 bb       	out	0x15, r24	; 21
     448:	08 95       	ret
     44a:	86 31       	cpi	r24, 0x16	; 22
     44c:	91 05       	cpc	r25, r1
     44e:	21 f4       	brne	.+8      	; 0x458 <__EEPROM_REGION_LENGTH__+0x58>
     450:	85 b3       	in	r24, 0x15	; 21
     452:	84 60       	ori	r24, 0x04	; 4
     454:	85 bb       	out	0x15, r24	; 21
     456:	08 95       	ret
     458:	87 31       	cpi	r24, 0x17	; 23
     45a:	91 05       	cpc	r25, r1
     45c:	21 f4       	brne	.+8      	; 0x466 <__EEPROM_REGION_LENGTH__+0x66>
     45e:	85 b3       	in	r24, 0x15	; 21
     460:	88 60       	ori	r24, 0x08	; 8
     462:	85 bb       	out	0x15, r24	; 21
     464:	08 95       	ret
     466:	88 31       	cpi	r24, 0x18	; 24
     468:	91 05       	cpc	r25, r1
     46a:	21 f4       	brne	.+8      	; 0x474 <__EEPROM_REGION_LENGTH__+0x74>
     46c:	85 b3       	in	r24, 0x15	; 21
     46e:	80 61       	ori	r24, 0x10	; 16
     470:	85 bb       	out	0x15, r24	; 21
     472:	08 95       	ret
     474:	89 31       	cpi	r24, 0x19	; 25
     476:	91 05       	cpc	r25, r1
     478:	21 f4       	brne	.+8      	; 0x482 <__EEPROM_REGION_LENGTH__+0x82>
     47a:	85 b3       	in	r24, 0x15	; 21
     47c:	80 62       	ori	r24, 0x20	; 32
     47e:	85 bb       	out	0x15, r24	; 21
     480:	08 95       	ret
     482:	8a 31       	cpi	r24, 0x1A	; 26
     484:	91 05       	cpc	r25, r1
     486:	21 f4       	brne	.+8      	; 0x490 <__EEPROM_REGION_LENGTH__+0x90>
     488:	85 b3       	in	r24, 0x15	; 21
     48a:	80 64       	ori	r24, 0x40	; 64
     48c:	85 bb       	out	0x15, r24	; 21
     48e:	08 95       	ret
     490:	8b 31       	cpi	r24, 0x1B	; 27
     492:	91 05       	cpc	r25, r1
     494:	21 f4       	brne	.+8      	; 0x49e <__EEPROM_REGION_LENGTH__+0x9e>
     496:	85 b3       	in	r24, 0x15	; 21
     498:	80 68       	ori	r24, 0x80	; 128
     49a:	85 bb       	out	0x15, r24	; 21
     49c:	08 95       	ret
     49e:	8e 31       	cpi	r24, 0x1E	; 30
     4a0:	91 05       	cpc	r25, r1
     4a2:	21 f4       	brne	.+8      	; 0x4ac <__EEPROM_REGION_LENGTH__+0xac>
     4a4:	82 b3       	in	r24, 0x12	; 18
     4a6:	81 60       	ori	r24, 0x01	; 1
     4a8:	82 bb       	out	0x12, r24	; 18
     4aa:	08 95       	ret
     4ac:	8f 31       	cpi	r24, 0x1F	; 31
     4ae:	91 05       	cpc	r25, r1
     4b0:	21 f4       	brne	.+8      	; 0x4ba <__EEPROM_REGION_LENGTH__+0xba>
     4b2:	82 b3       	in	r24, 0x12	; 18
     4b4:	82 60       	ori	r24, 0x02	; 2
     4b6:	82 bb       	out	0x12, r24	; 18
     4b8:	08 95       	ret
     4ba:	80 32       	cpi	r24, 0x20	; 32
     4bc:	91 05       	cpc	r25, r1
     4be:	21 f4       	brne	.+8      	; 0x4c8 <__EEPROM_REGION_LENGTH__+0xc8>
     4c0:	82 b3       	in	r24, 0x12	; 18
     4c2:	84 60       	ori	r24, 0x04	; 4
     4c4:	82 bb       	out	0x12, r24	; 18
     4c6:	08 95       	ret
     4c8:	81 32       	cpi	r24, 0x21	; 33
     4ca:	91 05       	cpc	r25, r1
     4cc:	21 f4       	brne	.+8      	; 0x4d6 <__EEPROM_REGION_LENGTH__+0xd6>
     4ce:	82 b3       	in	r24, 0x12	; 18
     4d0:	88 60       	ori	r24, 0x08	; 8
     4d2:	82 bb       	out	0x12, r24	; 18
     4d4:	08 95       	ret
     4d6:	82 32       	cpi	r24, 0x22	; 34
     4d8:	91 05       	cpc	r25, r1
     4da:	21 f4       	brne	.+8      	; 0x4e4 <__EEPROM_REGION_LENGTH__+0xe4>
     4dc:	82 b3       	in	r24, 0x12	; 18
     4de:	80 61       	ori	r24, 0x10	; 16
     4e0:	82 bb       	out	0x12, r24	; 18
     4e2:	08 95       	ret
     4e4:	83 32       	cpi	r24, 0x23	; 35
     4e6:	91 05       	cpc	r25, r1
     4e8:	21 f4       	brne	.+8      	; 0x4f2 <__EEPROM_REGION_LENGTH__+0xf2>
     4ea:	82 b3       	in	r24, 0x12	; 18
     4ec:	80 62       	ori	r24, 0x20	; 32
     4ee:	82 bb       	out	0x12, r24	; 18
     4f0:	08 95       	ret
     4f2:	84 32       	cpi	r24, 0x24	; 36
     4f4:	91 05       	cpc	r25, r1
     4f6:	21 f4       	brne	.+8      	; 0x500 <__EEPROM_REGION_LENGTH__+0x100>
     4f8:	82 b3       	in	r24, 0x12	; 18
     4fa:	80 64       	ori	r24, 0x40	; 64
     4fc:	82 bb       	out	0x12, r24	; 18
     4fe:	08 95       	ret
     500:	85 97       	sbiw	r24, 0x25	; 37
     502:	19 f4       	brne	.+6      	; 0x50a <__EEPROM_REGION_LENGTH__+0x10a>
     504:	82 b3       	in	r24, 0x12	; 18
     506:	80 68       	ori	r24, 0x80	; 128
     508:	82 bb       	out	0x12, r24	; 18
     50a:	08 95       	ret

0000050c <Lcd4_Port>:
     50c:	cf 93       	push	r28
     50e:	c8 2f       	mov	r28, r24
     510:	80 ff       	sbrs	r24, 0
     512:	07 c0       	rjmp	.+14     	; 0x522 <Lcd4_Port+0x16>
     514:	61 e0       	ldi	r22, 0x01	; 1
     516:	70 e0       	ldi	r23, 0x00	; 0
     518:	82 e2       	ldi	r24, 0x22	; 34
     51a:	90 e0       	ldi	r25, 0x00	; 0
     51c:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     520:	06 c0       	rjmp	.+12     	; 0x52e <Lcd4_Port+0x22>
     522:	60 e0       	ldi	r22, 0x00	; 0
     524:	70 e0       	ldi	r23, 0x00	; 0
     526:	82 e2       	ldi	r24, 0x22	; 34
     528:	90 e0       	ldi	r25, 0x00	; 0
     52a:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     52e:	c1 ff       	sbrs	r28, 1
     530:	07 c0       	rjmp	.+14     	; 0x540 <Lcd4_Port+0x34>
     532:	61 e0       	ldi	r22, 0x01	; 1
     534:	70 e0       	ldi	r23, 0x00	; 0
     536:	83 e2       	ldi	r24, 0x23	; 35
     538:	90 e0       	ldi	r25, 0x00	; 0
     53a:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     53e:	06 c0       	rjmp	.+12     	; 0x54c <Lcd4_Port+0x40>
     540:	60 e0       	ldi	r22, 0x00	; 0
     542:	70 e0       	ldi	r23, 0x00	; 0
     544:	83 e2       	ldi	r24, 0x23	; 35
     546:	90 e0       	ldi	r25, 0x00	; 0
     548:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     54c:	c2 ff       	sbrs	r28, 2
     54e:	07 c0       	rjmp	.+14     	; 0x55e <Lcd4_Port+0x52>
     550:	61 e0       	ldi	r22, 0x01	; 1
     552:	70 e0       	ldi	r23, 0x00	; 0
     554:	84 e2       	ldi	r24, 0x24	; 36
     556:	90 e0       	ldi	r25, 0x00	; 0
     558:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     55c:	06 c0       	rjmp	.+12     	; 0x56a <Lcd4_Port+0x5e>
     55e:	60 e0       	ldi	r22, 0x00	; 0
     560:	70 e0       	ldi	r23, 0x00	; 0
     562:	84 e2       	ldi	r24, 0x24	; 36
     564:	90 e0       	ldi	r25, 0x00	; 0
     566:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     56a:	c3 ff       	sbrs	r28, 3
     56c:	07 c0       	rjmp	.+14     	; 0x57c <Lcd4_Port+0x70>
     56e:	61 e0       	ldi	r22, 0x01	; 1
     570:	70 e0       	ldi	r23, 0x00	; 0
     572:	85 e2       	ldi	r24, 0x25	; 37
     574:	90 e0       	ldi	r25, 0x00	; 0
     576:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     57a:	06 c0       	rjmp	.+12     	; 0x588 <Lcd4_Port+0x7c>
     57c:	60 e0       	ldi	r22, 0x00	; 0
     57e:	70 e0       	ldi	r23, 0x00	; 0
     580:	85 e2       	ldi	r24, 0x25	; 37
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     588:	cf 91       	pop	r28
     58a:	08 95       	ret

0000058c <Lcd4_Cmd>:
     58c:	cf 93       	push	r28
     58e:	c8 2f       	mov	r28, r24
     590:	60 e0       	ldi	r22, 0x00	; 0
     592:	70 e0       	ldi	r23, 0x00	; 0
     594:	8a e1       	ldi	r24, 0x1A	; 26
     596:	90 e0       	ldi	r25, 0x00	; 0
     598:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     59c:	8c 2f       	mov	r24, r28
     59e:	0e 94 86 02 	call	0x50c	; 0x50c <Lcd4_Port>
     5a2:	61 e0       	ldi	r22, 0x01	; 1
     5a4:	70 e0       	ldi	r23, 0x00	; 0
     5a6:	8b e1       	ldi	r24, 0x1B	; 27
     5a8:	90 e0       	ldi	r25, 0x00	; 0
     5aa:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     5ae:	89 ef       	ldi	r24, 0xF9	; 249
     5b0:	90 e0       	ldi	r25, 0x00	; 0
     5b2:	01 97       	sbiw	r24, 0x01	; 1
     5b4:	f1 f7       	brne	.-4      	; 0x5b2 <Lcd4_Cmd+0x26>
     5b6:	00 c0       	rjmp	.+0      	; 0x5b8 <Lcd4_Cmd+0x2c>
     5b8:	00 00       	nop
     5ba:	60 e0       	ldi	r22, 0x00	; 0
     5bc:	70 e0       	ldi	r23, 0x00	; 0
     5be:	8b e1       	ldi	r24, 0x1B	; 27
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     5c6:	89 ef       	ldi	r24, 0xF9	; 249
     5c8:	90 e0       	ldi	r25, 0x00	; 0
     5ca:	01 97       	sbiw	r24, 0x01	; 1
     5cc:	f1 f7       	brne	.-4      	; 0x5ca <Lcd4_Cmd+0x3e>
     5ce:	00 c0       	rjmp	.+0      	; 0x5d0 <Lcd4_Cmd+0x44>
     5d0:	00 00       	nop
     5d2:	cf 91       	pop	r28
     5d4:	08 95       	ret

000005d6 <Lcd4_Set_Cursor>:
     5d6:	cf 93       	push	r28
     5d8:	81 30       	cpi	r24, 0x01	; 1
     5da:	61 f4       	brne	.+24     	; 0x5f4 <Lcd4_Set_Cursor+0x1e>
     5dc:	80 e8       	ldi	r24, 0x80	; 128
     5de:	86 0f       	add	r24, r22
     5e0:	c6 2f       	mov	r28, r22
     5e2:	cf 70       	andi	r28, 0x0F	; 15
     5e4:	82 95       	swap	r24
     5e6:	8f 70       	andi	r24, 0x0F	; 15
     5e8:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     5ec:	8c 2f       	mov	r24, r28
     5ee:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     5f2:	0d c0       	rjmp	.+26     	; 0x60e <Lcd4_Set_Cursor+0x38>
     5f4:	82 30       	cpi	r24, 0x02	; 2
     5f6:	59 f4       	brne	.+22     	; 0x60e <Lcd4_Set_Cursor+0x38>
     5f8:	80 ec       	ldi	r24, 0xC0	; 192
     5fa:	86 0f       	add	r24, r22
     5fc:	c6 2f       	mov	r28, r22
     5fe:	cf 70       	andi	r28, 0x0F	; 15
     600:	82 95       	swap	r24
     602:	8f 70       	andi	r24, 0x0F	; 15
     604:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     608:	8c 2f       	mov	r24, r28
     60a:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     60e:	cf 91       	pop	r28
     610:	08 95       	ret

00000612 <Lcd4_Init>:
     612:	80 e0       	ldi	r24, 0x00	; 0
     614:	0e 94 86 02 	call	0x50c	; 0x50c <Lcd4_Port>
     618:	87 e8       	ldi	r24, 0x87	; 135
     61a:	93 e1       	ldi	r25, 0x13	; 19
     61c:	01 97       	sbiw	r24, 0x01	; 1
     61e:	f1 f7       	brne	.-4      	; 0x61c <Lcd4_Init+0xa>
     620:	00 c0       	rjmp	.+0      	; 0x622 <Lcd4_Init+0x10>
     622:	00 00       	nop
     624:	83 e0       	ldi	r24, 0x03	; 3
     626:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     62a:	81 ee       	ldi	r24, 0xE1	; 225
     62c:	94 e0       	ldi	r25, 0x04	; 4
     62e:	01 97       	sbiw	r24, 0x01	; 1
     630:	f1 f7       	brne	.-4      	; 0x62e <Lcd4_Init+0x1c>
     632:	00 c0       	rjmp	.+0      	; 0x634 <Lcd4_Init+0x22>
     634:	00 00       	nop
     636:	83 e0       	ldi	r24, 0x03	; 3
     638:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     63c:	8d eb       	ldi	r24, 0xBD	; 189
     63e:	9a e0       	ldi	r25, 0x0A	; 10
     640:	01 97       	sbiw	r24, 0x01	; 1
     642:	f1 f7       	brne	.-4      	; 0x640 <Lcd4_Init+0x2e>
     644:	00 c0       	rjmp	.+0      	; 0x646 <Lcd4_Init+0x34>
     646:	00 00       	nop
     648:	83 e0       	ldi	r24, 0x03	; 3
     64a:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     64e:	82 e0       	ldi	r24, 0x02	; 2
     650:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     654:	82 e0       	ldi	r24, 0x02	; 2
     656:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     65a:	88 e0       	ldi	r24, 0x08	; 8
     65c:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     660:	80 e0       	ldi	r24, 0x00	; 0
     662:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     666:	8c e0       	ldi	r24, 0x0C	; 12
     668:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     66c:	80 e0       	ldi	r24, 0x00	; 0
     66e:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     672:	86 e0       	ldi	r24, 0x06	; 6
     674:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Cmd>
     678:	08 95       	ret

0000067a <Lcd4_Write_Char>:
     67a:	cf 93       	push	r28
     67c:	df 93       	push	r29
     67e:	d8 2f       	mov	r29, r24
     680:	df 70       	andi	r29, 0x0F	; 15
     682:	c8 2f       	mov	r28, r24
     684:	c0 7f       	andi	r28, 0xF0	; 240
     686:	61 e0       	ldi	r22, 0x01	; 1
     688:	70 e0       	ldi	r23, 0x00	; 0
     68a:	8a e1       	ldi	r24, 0x1A	; 26
     68c:	90 e0       	ldi	r25, 0x00	; 0
     68e:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     692:	8c 2f       	mov	r24, r28
     694:	82 95       	swap	r24
     696:	8f 70       	andi	r24, 0x0F	; 15
     698:	0e 94 86 02 	call	0x50c	; 0x50c <Lcd4_Port>
     69c:	61 e0       	ldi	r22, 0x01	; 1
     69e:	70 e0       	ldi	r23, 0x00	; 0
     6a0:	8b e1       	ldi	r24, 0x1B	; 27
     6a2:	90 e0       	ldi	r25, 0x00	; 0
     6a4:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     6a8:	89 ef       	ldi	r24, 0xF9	; 249
     6aa:	90 e0       	ldi	r25, 0x00	; 0
     6ac:	01 97       	sbiw	r24, 0x01	; 1
     6ae:	f1 f7       	brne	.-4      	; 0x6ac <Lcd4_Write_Char+0x32>
     6b0:	00 c0       	rjmp	.+0      	; 0x6b2 <Lcd4_Write_Char+0x38>
     6b2:	00 00       	nop
     6b4:	60 e0       	ldi	r22, 0x00	; 0
     6b6:	70 e0       	ldi	r23, 0x00	; 0
     6b8:	8b e1       	ldi	r24, 0x1B	; 27
     6ba:	90 e0       	ldi	r25, 0x00	; 0
     6bc:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     6c0:	89 ef       	ldi	r24, 0xF9	; 249
     6c2:	90 e0       	ldi	r25, 0x00	; 0
     6c4:	01 97       	sbiw	r24, 0x01	; 1
     6c6:	f1 f7       	brne	.-4      	; 0x6c4 <Lcd4_Write_Char+0x4a>
     6c8:	00 c0       	rjmp	.+0      	; 0x6ca <Lcd4_Write_Char+0x50>
     6ca:	00 00       	nop
     6cc:	8d 2f       	mov	r24, r29
     6ce:	0e 94 86 02 	call	0x50c	; 0x50c <Lcd4_Port>
     6d2:	61 e0       	ldi	r22, 0x01	; 1
     6d4:	70 e0       	ldi	r23, 0x00	; 0
     6d6:	8b e1       	ldi	r24, 0x1B	; 27
     6d8:	90 e0       	ldi	r25, 0x00	; 0
     6da:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     6de:	89 ef       	ldi	r24, 0xF9	; 249
     6e0:	90 e0       	ldi	r25, 0x00	; 0
     6e2:	01 97       	sbiw	r24, 0x01	; 1
     6e4:	f1 f7       	brne	.-4      	; 0x6e2 <Lcd4_Write_Char+0x68>
     6e6:	00 c0       	rjmp	.+0      	; 0x6e8 <Lcd4_Write_Char+0x6e>
     6e8:	00 00       	nop
     6ea:	60 e0       	ldi	r22, 0x00	; 0
     6ec:	70 e0       	ldi	r23, 0x00	; 0
     6ee:	8b e1       	ldi	r24, 0x1B	; 27
     6f0:	90 e0       	ldi	r25, 0x00	; 0
     6f2:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     6f6:	89 ef       	ldi	r24, 0xF9	; 249
     6f8:	90 e0       	ldi	r25, 0x00	; 0
     6fa:	01 97       	sbiw	r24, 0x01	; 1
     6fc:	f1 f7       	brne	.-4      	; 0x6fa <Lcd4_Write_Char+0x80>
     6fe:	00 c0       	rjmp	.+0      	; 0x700 <Lcd4_Write_Char+0x86>
     700:	00 00       	nop
     702:	df 91       	pop	r29
     704:	cf 91       	pop	r28
     706:	08 95       	ret

00000708 <Lcd4_Write_String>:
     708:	0f 93       	push	r16
     70a:	1f 93       	push	r17
     70c:	cf 93       	push	r28
     70e:	df 93       	push	r29
     710:	8c 01       	movw	r16, r24
     712:	c0 e0       	ldi	r28, 0x00	; 0
     714:	d0 e0       	ldi	r29, 0x00	; 0
     716:	03 c0       	rjmp	.+6      	; 0x71e <Lcd4_Write_String+0x16>
     718:	0e 94 3d 03 	call	0x67a	; 0x67a <Lcd4_Write_Char>
     71c:	21 96       	adiw	r28, 0x01	; 1
     71e:	f8 01       	movw	r30, r16
     720:	ec 0f       	add	r30, r28
     722:	fd 1f       	adc	r31, r29
     724:	80 81       	ld	r24, Z
     726:	81 11       	cpse	r24, r1
     728:	f7 cf       	rjmp	.-18     	; 0x718 <Lcd4_Write_String+0x10>
     72a:	df 91       	pop	r29
     72c:	cf 91       	pop	r28
     72e:	1f 91       	pop	r17
     730:	0f 91       	pop	r16
     732:	08 95       	ret

00000734 <UART_init>:

void UART_init(void){
	int UBRR_Value = 25; // 2400 baud rate

	UBRRH = (unsigned char) (UBRR_Value >> 8);
     734:	10 bc       	out	0x20, r1	; 32

	UBRRL = (unsigned char) UBRR_Value;
     736:	89 e1       	ldi	r24, 0x19	; 25
     738:	89 b9       	out	0x09, r24	; 9

	UCSRB = (1 << RXEN)| (1<TXEN);
     73a:	81 e1       	ldi	r24, 0x11	; 17
     73c:	8a b9       	out	0x0a, r24	; 10

	UCSRC = (1 << USBS) | (3 << UCSZ0);
     73e:	8e e0       	ldi	r24, 0x0E	; 14
     740:	80 bd       	out	0x20, r24	; 32
     742:	08 95       	ret

00000744 <UART_receive>:
	//UCSRC = 0b10001110;
}
unsigned char UART_receive(void){
	// Wait until RXC flag is set to logic 1
	while ((UCSRA & (1<<RXC)) == 0x00);
     744:	5f 9b       	sbis	0x0b, 7	; 11
     746:	fe cf       	rjmp	.-4      	; 0x744 <UART_receive>
	return UDR; // Read the received character from UDR
     748:	8c b1       	in	r24, 0x0c	; 12
}
     74a:	08 95       	ret

0000074c <main>:

int main(void)
{ 
     74c:	cf 93       	push	r28
     74e:	df 93       	push	r29
     750:	cd b7       	in	r28, 0x3d	; 61
     752:	de b7       	in	r29, 0x3e	; 62
     754:	a9 97       	sbiw	r28, 0x29	; 41
     756:	0f b6       	in	r0, 0x3f	; 63
     758:	f8 94       	cli
     75a:	de bf       	out	0x3e, r29	; 62
     75c:	0f be       	out	0x3f, r0	; 63
     75e:	cd bf       	out	0x3d, r28	; 61
	MCUCSR |= 1<<JTD;
     760:	84 b7       	in	r24, 0x34	; 52
     762:	80 68       	ori	r24, 0x80	; 128
     764:	84 bf       	out	0x34, r24	; 52
	MCUCSR |= 1<<JTD;
     766:	84 b7       	in	r24, 0x34	; 52
     768:	80 68       	ori	r24, 0x80	; 128
     76a:	84 bf       	out	0x34, r24	; 52
    DDRD = 0b11111110;
     76c:	8e ef       	ldi	r24, 0xFE	; 254
     76e:	81 bb       	out	0x11, r24	; 17
    DDRC = 0xFF;
     770:	8f ef       	ldi	r24, 0xFF	; 255
     772:	84 bb       	out	0x14, r24	; 20
	DDRA = 0xFF;
     774:	8a bb       	out	0x1a, r24	; 26
	DDRB = 0xFF;
     776:	87 bb       	out	0x17, r24	; 23
	UART_init();
     778:	0e 94 9a 03 	call	0x734	; 0x734 <UART_init>
	Lcd4_Init();
     77c:	0e 94 09 03 	call	0x612	; 0x612 <Lcd4_Init>
	char ch1 ='-';	//next shape
	int score_update = 0;
     780:	e1 2c       	mov	r14, r1
     782:	f1 2c       	mov	r15, r1
    DDRC = 0xFF;
	DDRA = 0xFF;
	DDRB = 0xFF;
	UART_init();
	Lcd4_Init();
	char ch1 ='-';	//next shape
     784:	0f 2e       	mov	r0, r31
     786:	fd e2       	ldi	r31, 0x2D	; 45
     788:	bf 2e       	mov	r11, r31
     78a:	f0 2d       	mov	r31, r0
	int score_update = 0;
    while (1) 
    {
		
		int flag = 1;
	    int ch = UART_receive();
     78c:	0e 94 a2 03 	call	0x744	; 0x744 <UART_receive>
     790:	90 e0       	ldi	r25, 0x00	; 0
		if(ch == 10){
     792:	8a 30       	cpi	r24, 0x0A	; 10
     794:	91 05       	cpc	r25, r1
     796:	39 f4       	brne	.+14     	; 0x7a6 <main+0x5a>
			score_update++;
     798:	8f ef       	ldi	r24, 0xFF	; 255
     79a:	e8 1a       	sub	r14, r24
     79c:	f8 0a       	sbc	r15, r24
	char ch1 ='-';	//next shape
	int score_update = 0;
    while (1) 
    {
		
		int flag = 1;
     79e:	cc 24       	eor	r12, r12
     7a0:	c3 94       	inc	r12
     7a2:	d1 2c       	mov	r13, r1
     7a4:	5a c1       	rjmp	.+692    	; 0xa5a <__stack+0x1fb>
	    int ch = UART_receive();
		if(ch == 10){
			score_update++;
		}
		else if(ch == 11){
     7a6:	8b 30       	cpi	r24, 0x0B	; 11
     7a8:	91 05       	cpc	r25, r1
     7aa:	39 f4       	brne	.+14     	; 0x7ba <main+0x6e>
			score_update += 8;
     7ac:	88 e0       	ldi	r24, 0x08	; 8
     7ae:	e8 0e       	add	r14, r24
     7b0:	f1 1c       	adc	r15, r1
	char ch1 ='-';	//next shape
	int score_update = 0;
    while (1) 
    {
		
		int flag = 1;
     7b2:	cc 24       	eor	r12, r12
     7b4:	c3 94       	inc	r12
     7b6:	d1 2c       	mov	r13, r1
     7b8:	50 c1       	rjmp	.+672    	; 0xa5a <__stack+0x1fb>
			score_update++;
		}
		else if(ch == 11){
			score_update += 8;
		}
		else if(ch == 9){
     7ba:	89 30       	cpi	r24, 0x09	; 9
     7bc:	91 05       	cpc	r25, r1
     7be:	09 f4       	brne	.+2      	; 0x7c2 <main+0x76>
     7c0:	4a c1       	rjmp	.+660    	; 0xa56 <__stack+0x1f7>
			flag = 0;
		}
		else if(ch == 0){
     7c2:	00 97       	sbiw	r24, 0x00	; 0
     7c4:	f9 f0       	breq	.+62     	; 0x804 <__DATA_REGION_LENGTH__+0x4>
     7c6:	2b c0       	rjmp	.+86     	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
			//shape_O
			for(int i = 0 ; i < 8; i++){
				for(int j = 0; j < 8; j++){
					current_shape_array[i][j] = shape_O_array[i][j];
     7c8:	cb 01       	movw	r24, r22
     7ca:	88 0f       	add	r24, r24
     7cc:	99 1f       	adc	r25, r25
     7ce:	88 0f       	add	r24, r24
     7d0:	99 1f       	adc	r25, r25
     7d2:	88 0f       	add	r24, r24
     7d4:	99 1f       	adc	r25, r25
     7d6:	fc 01       	movw	r30, r24
     7d8:	e0 52       	subi	r30, 0x20	; 32
     7da:	fe 4f       	sbci	r31, 0xFE	; 254
     7dc:	e2 0f       	add	r30, r18
     7de:	f3 1f       	adc	r31, r19
     7e0:	40 81       	ld	r20, Z
     7e2:	82 5b       	subi	r24, 0xB2	; 178
     7e4:	9d 4f       	sbci	r25, 0xFD	; 253
     7e6:	fc 01       	movw	r30, r24
     7e8:	e2 0f       	add	r30, r18
     7ea:	f3 1f       	adc	r31, r19
     7ec:	40 83       	st	Z, r20
			flag = 0;
		}
		else if(ch == 0){
			//shape_O
			for(int i = 0 ; i < 8; i++){
				for(int j = 0; j < 8; j++){
     7ee:	2f 5f       	subi	r18, 0xFF	; 255
     7f0:	3f 4f       	sbci	r19, 0xFF	; 255
     7f2:	02 c0       	rjmp	.+4      	; 0x7f8 <main+0xac>
     7f4:	20 e0       	ldi	r18, 0x00	; 0
     7f6:	30 e0       	ldi	r19, 0x00	; 0
     7f8:	28 30       	cpi	r18, 0x08	; 8
     7fa:	31 05       	cpc	r19, r1
     7fc:	2c f3       	brlt	.-54     	; 0x7c8 <main+0x7c>
		else if(ch == 9){
			flag = 0;
		}
		else if(ch == 0){
			//shape_O
			for(int i = 0 ; i < 8; i++){
     7fe:	6f 5f       	subi	r22, 0xFF	; 255
     800:	7f 4f       	sbci	r23, 0xFF	; 255
     802:	02 c0       	rjmp	.+4      	; 0x808 <__DATA_REGION_LENGTH__+0x8>
     804:	60 e0       	ldi	r22, 0x00	; 0
     806:	70 e0       	ldi	r23, 0x00	; 0
     808:	68 30       	cpi	r22, 0x08	; 8
     80a:	71 05       	cpc	r23, r1
     80c:	9c f3       	brlt	.-26     	; 0x7f4 <main+0xa8>
	char ch1 ='-';	//next shape
	int score_update = 0;
    while (1) 
    {
		
		int flag = 1;
     80e:	cc 24       	eor	r12, r12
     810:	c3 94       	inc	r12
     812:	d1 2c       	mov	r13, r1
			for(int i = 0 ; i < 8; i++){
				for(int j = 0; j < 8; j++){
					current_shape_array[i][j] = shape_O_array[i][j];
				}
			}
			ch1 = 'O';
     814:	0f 2e       	mov	r0, r31
     816:	ff e4       	ldi	r31, 0x4F	; 79
     818:	bf 2e       	mov	r11, r31
     81a:	f0 2d       	mov	r31, r0
     81c:	1e c1       	rjmp	.+572    	; 0xa5a <__stack+0x1fb>
		}
		else if(ch == 1){
     81e:	81 30       	cpi	r24, 0x01	; 1
     820:	91 05       	cpc	r25, r1
     822:	61 f5       	brne	.+88     	; 0x87c <__stack+0x1d>
     824:	1e c0       	rjmp	.+60     	; 0x862 <__stack+0x3>
			//shape_I
			for(int i = 0 ; i < 8; i++){
				for(int j = 0; j < 8; j++){
					current_shape_array[i][j] = shape_I_array[i][j];
     826:	cb 01       	movw	r24, r22
     828:	88 0f       	add	r24, r24
     82a:	99 1f       	adc	r25, r25
     82c:	88 0f       	add	r24, r24
     82e:	99 1f       	adc	r25, r25
     830:	88 0f       	add	r24, r24
     832:	99 1f       	adc	r25, r25
     834:	fc 01       	movw	r30, r24
     836:	e0 56       	subi	r30, 0x60	; 96
     838:	fe 4f       	sbci	r31, 0xFE	; 254
     83a:	e2 0f       	add	r30, r18
     83c:	f3 1f       	adc	r31, r19
     83e:	40 81       	ld	r20, Z
     840:	82 5b       	subi	r24, 0xB2	; 178
     842:	9d 4f       	sbci	r25, 0xFD	; 253
     844:	fc 01       	movw	r30, r24
     846:	e2 0f       	add	r30, r18
     848:	f3 1f       	adc	r31, r19
     84a:	40 83       	st	Z, r20
			ch1 = 'O';
		}
		else if(ch == 1){
			//shape_I
			for(int i = 0 ; i < 8; i++){
				for(int j = 0; j < 8; j++){
     84c:	2f 5f       	subi	r18, 0xFF	; 255
     84e:	3f 4f       	sbci	r19, 0xFF	; 255
     850:	02 c0       	rjmp	.+4      	; 0x856 <__DATA_REGION_LENGTH__+0x56>
     852:	20 e0       	ldi	r18, 0x00	; 0
     854:	30 e0       	ldi	r19, 0x00	; 0
     856:	28 30       	cpi	r18, 0x08	; 8
     858:	31 05       	cpc	r19, r1
     85a:	2c f3       	brlt	.-54     	; 0x826 <__DATA_REGION_LENGTH__+0x26>
			}
			ch1 = 'O';
		}
		else if(ch == 1){
			//shape_I
			for(int i = 0 ; i < 8; i++){
     85c:	6f 5f       	subi	r22, 0xFF	; 255
     85e:	7f 4f       	sbci	r23, 0xFF	; 255
     860:	02 c0       	rjmp	.+4      	; 0x866 <__stack+0x7>
     862:	60 e0       	ldi	r22, 0x00	; 0
     864:	70 e0       	ldi	r23, 0x00	; 0
     866:	68 30       	cpi	r22, 0x08	; 8
     868:	71 05       	cpc	r23, r1
     86a:	9c f3       	brlt	.-26     	; 0x852 <__DATA_REGION_LENGTH__+0x52>
	char ch1 ='-';	//next shape
	int score_update = 0;
    while (1) 
    {
		
		int flag = 1;
     86c:	cc 24       	eor	r12, r12
     86e:	c3 94       	inc	r12
     870:	d1 2c       	mov	r13, r1
			for(int i = 0 ; i < 8; i++){
				for(int j = 0; j < 8; j++){
					current_shape_array[i][j] = shape_I_array[i][j];
				}
			}
			ch1 = 'I';
     872:	0f 2e       	mov	r0, r31
     874:	f9 e4       	ldi	r31, 0x49	; 73
     876:	bf 2e       	mov	r11, r31
     878:	f0 2d       	mov	r31, r0
     87a:	ef c0       	rjmp	.+478    	; 0xa5a <__stack+0x1fb>
		}
		else if(ch == 2){
     87c:	82 30       	cpi	r24, 0x02	; 2
     87e:	91 05       	cpc	r25, r1
     880:	61 f5       	brne	.+88     	; 0x8da <__stack+0x7b>
     882:	1e c0       	rjmp	.+60     	; 0x8c0 <__stack+0x61>
			//shape_L
			for(int i = 0 ; i < 8; i++){
				for(int j = 0; j < 8; j++){
					current_shape_array[i][j] = shape_L_array[i][j];
     884:	cb 01       	movw	r24, r22
     886:	88 0f       	add	r24, r24
     888:	99 1f       	adc	r25, r25
     88a:	88 0f       	add	r24, r24
     88c:	99 1f       	adc	r25, r25
     88e:	88 0f       	add	r24, r24
     890:	99 1f       	adc	r25, r25
     892:	fc 01       	movw	r30, r24
     894:	e0 5a       	subi	r30, 0xA0	; 160
     896:	fe 4f       	sbci	r31, 0xFE	; 254
     898:	e2 0f       	add	r30, r18
     89a:	f3 1f       	adc	r31, r19
     89c:	40 81       	ld	r20, Z
     89e:	82 5b       	subi	r24, 0xB2	; 178
     8a0:	9d 4f       	sbci	r25, 0xFD	; 253
     8a2:	fc 01       	movw	r30, r24
     8a4:	e2 0f       	add	r30, r18
     8a6:	f3 1f       	adc	r31, r19
     8a8:	40 83       	st	Z, r20
			ch1 = 'I';
		}
		else if(ch == 2){
			//shape_L
			for(int i = 0 ; i < 8; i++){
				for(int j = 0; j < 8; j++){
     8aa:	2f 5f       	subi	r18, 0xFF	; 255
     8ac:	3f 4f       	sbci	r19, 0xFF	; 255
     8ae:	02 c0       	rjmp	.+4      	; 0x8b4 <__stack+0x55>
     8b0:	20 e0       	ldi	r18, 0x00	; 0
     8b2:	30 e0       	ldi	r19, 0x00	; 0
     8b4:	28 30       	cpi	r18, 0x08	; 8
     8b6:	31 05       	cpc	r19, r1
     8b8:	2c f3       	brlt	.-54     	; 0x884 <__stack+0x25>
			}
			ch1 = 'I';
		}
		else if(ch == 2){
			//shape_L
			for(int i = 0 ; i < 8; i++){
     8ba:	6f 5f       	subi	r22, 0xFF	; 255
     8bc:	7f 4f       	sbci	r23, 0xFF	; 255
     8be:	02 c0       	rjmp	.+4      	; 0x8c4 <__stack+0x65>
     8c0:	60 e0       	ldi	r22, 0x00	; 0
     8c2:	70 e0       	ldi	r23, 0x00	; 0
     8c4:	68 30       	cpi	r22, 0x08	; 8
     8c6:	71 05       	cpc	r23, r1
     8c8:	9c f3       	brlt	.-26     	; 0x8b0 <__stack+0x51>
	char ch1 ='-';	//next shape
	int score_update = 0;
    while (1) 
    {
		
		int flag = 1;
     8ca:	cc 24       	eor	r12, r12
     8cc:	c3 94       	inc	r12
     8ce:	d1 2c       	mov	r13, r1
			for(int i = 0 ; i < 8; i++){
				for(int j = 0; j < 8; j++){
					current_shape_array[i][j] = shape_L_array[i][j];
				}
			}
			ch1 = 'L';
     8d0:	0f 2e       	mov	r0, r31
     8d2:	fc e4       	ldi	r31, 0x4C	; 76
     8d4:	bf 2e       	mov	r11, r31
     8d6:	f0 2d       	mov	r31, r0
     8d8:	c0 c0       	rjmp	.+384    	; 0xa5a <__stack+0x1fb>
		}
		else if(ch == 3){
     8da:	83 30       	cpi	r24, 0x03	; 3
     8dc:	91 05       	cpc	r25, r1
     8de:	61 f5       	brne	.+88     	; 0x938 <__stack+0xd9>
     8e0:	1e c0       	rjmp	.+60     	; 0x91e <__stack+0xbf>
			//shape_J
			for(int i = 0 ; i < 8; i++){
				for(int j = 0; j < 8; j++){
					current_shape_array[i][j] = shape_J_array[i][j];
     8e2:	cb 01       	movw	r24, r22
     8e4:	88 0f       	add	r24, r24
     8e6:	99 1f       	adc	r25, r25
     8e8:	88 0f       	add	r24, r24
     8ea:	99 1f       	adc	r25, r25
     8ec:	88 0f       	add	r24, r24
     8ee:	99 1f       	adc	r25, r25
     8f0:	fc 01       	movw	r30, r24
     8f2:	e0 5e       	subi	r30, 0xE0	; 224
     8f4:	fe 4f       	sbci	r31, 0xFE	; 254
     8f6:	e2 0f       	add	r30, r18
     8f8:	f3 1f       	adc	r31, r19
     8fa:	40 81       	ld	r20, Z
     8fc:	82 5b       	subi	r24, 0xB2	; 178
     8fe:	9d 4f       	sbci	r25, 0xFD	; 253
     900:	fc 01       	movw	r30, r24
     902:	e2 0f       	add	r30, r18
     904:	f3 1f       	adc	r31, r19
     906:	40 83       	st	Z, r20
			ch1 = 'L';
		}
		else if(ch == 3){
			//shape_J
			for(int i = 0 ; i < 8; i++){
				for(int j = 0; j < 8; j++){
     908:	2f 5f       	subi	r18, 0xFF	; 255
     90a:	3f 4f       	sbci	r19, 0xFF	; 255
     90c:	02 c0       	rjmp	.+4      	; 0x912 <__stack+0xb3>
     90e:	20 e0       	ldi	r18, 0x00	; 0
     910:	30 e0       	ldi	r19, 0x00	; 0
     912:	28 30       	cpi	r18, 0x08	; 8
     914:	31 05       	cpc	r19, r1
     916:	2c f3       	brlt	.-54     	; 0x8e2 <__stack+0x83>
			}
			ch1 = 'L';
		}
		else if(ch == 3){
			//shape_J
			for(int i = 0 ; i < 8; i++){
     918:	6f 5f       	subi	r22, 0xFF	; 255
     91a:	7f 4f       	sbci	r23, 0xFF	; 255
     91c:	02 c0       	rjmp	.+4      	; 0x922 <__stack+0xc3>
     91e:	60 e0       	ldi	r22, 0x00	; 0
     920:	70 e0       	ldi	r23, 0x00	; 0
     922:	68 30       	cpi	r22, 0x08	; 8
     924:	71 05       	cpc	r23, r1
     926:	9c f3       	brlt	.-26     	; 0x90e <__stack+0xaf>
	char ch1 ='-';	//next shape
	int score_update = 0;
    while (1) 
    {
		
		int flag = 1;
     928:	cc 24       	eor	r12, r12
     92a:	c3 94       	inc	r12
     92c:	d1 2c       	mov	r13, r1
			for(int i = 0 ; i < 8; i++){
				for(int j = 0; j < 8; j++){
					current_shape_array[i][j] = shape_J_array[i][j];
				}
			}
			ch1 = 'J';
     92e:	0f 2e       	mov	r0, r31
     930:	fa e4       	ldi	r31, 0x4A	; 74
     932:	bf 2e       	mov	r11, r31
     934:	f0 2d       	mov	r31, r0
     936:	91 c0       	rjmp	.+290    	; 0xa5a <__stack+0x1fb>
		}
		else if(ch == 4){
     938:	84 30       	cpi	r24, 0x04	; 4
     93a:	91 05       	cpc	r25, r1
     93c:	61 f5       	brne	.+88     	; 0x996 <__stack+0x137>
     93e:	1e c0       	rjmp	.+60     	; 0x97c <__stack+0x11d>
			//shape_S
			for(int i = 0 ; i < 8; i++){
				for(int j = 0; j < 8; j++){
					current_shape_array[i][j] = shape_S_array[i][j];
     940:	cb 01       	movw	r24, r22
     942:	88 0f       	add	r24, r24
     944:	99 1f       	adc	r25, r25
     946:	88 0f       	add	r24, r24
     948:	99 1f       	adc	r25, r25
     94a:	88 0f       	add	r24, r24
     94c:	99 1f       	adc	r25, r25
     94e:	fc 01       	movw	r30, r24
     950:	e0 52       	subi	r30, 0x20	; 32
     952:	ff 4f       	sbci	r31, 0xFF	; 255
     954:	e2 0f       	add	r30, r18
     956:	f3 1f       	adc	r31, r19
     958:	40 81       	ld	r20, Z
     95a:	82 5b       	subi	r24, 0xB2	; 178
     95c:	9d 4f       	sbci	r25, 0xFD	; 253
     95e:	fc 01       	movw	r30, r24
     960:	e2 0f       	add	r30, r18
     962:	f3 1f       	adc	r31, r19
     964:	40 83       	st	Z, r20
			ch1 = 'J';
		}
		else if(ch == 4){
			//shape_S
			for(int i = 0 ; i < 8; i++){
				for(int j = 0; j < 8; j++){
     966:	2f 5f       	subi	r18, 0xFF	; 255
     968:	3f 4f       	sbci	r19, 0xFF	; 255
     96a:	02 c0       	rjmp	.+4      	; 0x970 <__stack+0x111>
     96c:	20 e0       	ldi	r18, 0x00	; 0
     96e:	30 e0       	ldi	r19, 0x00	; 0
     970:	28 30       	cpi	r18, 0x08	; 8
     972:	31 05       	cpc	r19, r1
     974:	2c f3       	brlt	.-54     	; 0x940 <__stack+0xe1>
			}
			ch1 = 'J';
		}
		else if(ch == 4){
			//shape_S
			for(int i = 0 ; i < 8; i++){
     976:	6f 5f       	subi	r22, 0xFF	; 255
     978:	7f 4f       	sbci	r23, 0xFF	; 255
     97a:	02 c0       	rjmp	.+4      	; 0x980 <__stack+0x121>
     97c:	60 e0       	ldi	r22, 0x00	; 0
     97e:	70 e0       	ldi	r23, 0x00	; 0
     980:	68 30       	cpi	r22, 0x08	; 8
     982:	71 05       	cpc	r23, r1
     984:	9c f3       	brlt	.-26     	; 0x96c <__stack+0x10d>
	char ch1 ='-';	//next shape
	int score_update = 0;
    while (1) 
    {
		
		int flag = 1;
     986:	cc 24       	eor	r12, r12
     988:	c3 94       	inc	r12
     98a:	d1 2c       	mov	r13, r1
			for(int i = 0 ; i < 8; i++){
				for(int j = 0; j < 8; j++){
					current_shape_array[i][j] = shape_S_array[i][j];
				}
			}
			ch1 = 'S';
     98c:	0f 2e       	mov	r0, r31
     98e:	f3 e5       	ldi	r31, 0x53	; 83
     990:	bf 2e       	mov	r11, r31
     992:	f0 2d       	mov	r31, r0
     994:	62 c0       	rjmp	.+196    	; 0xa5a <__stack+0x1fb>
		}
		else if(ch ==5){
     996:	85 30       	cpi	r24, 0x05	; 5
     998:	91 05       	cpc	r25, r1
     99a:	61 f5       	brne	.+88     	; 0x9f4 <__stack+0x195>
     99c:	1e c0       	rjmp	.+60     	; 0x9da <__stack+0x17b>
			//shape_Z
			for(int i = 0 ; i < 8; i++){
				for(int j = 0; j < 8; j++){
					current_shape_array[i][j] = shape_Z_array[i][j];
     99e:	cb 01       	movw	r24, r22
     9a0:	88 0f       	add	r24, r24
     9a2:	99 1f       	adc	r25, r25
     9a4:	88 0f       	add	r24, r24
     9a6:	99 1f       	adc	r25, r25
     9a8:	88 0f       	add	r24, r24
     9aa:	99 1f       	adc	r25, r25
     9ac:	fc 01       	movw	r30, r24
     9ae:	e0 56       	subi	r30, 0x60	; 96
     9b0:	ff 4f       	sbci	r31, 0xFF	; 255
     9b2:	e2 0f       	add	r30, r18
     9b4:	f3 1f       	adc	r31, r19
     9b6:	40 81       	ld	r20, Z
     9b8:	82 5b       	subi	r24, 0xB2	; 178
     9ba:	9d 4f       	sbci	r25, 0xFD	; 253
     9bc:	fc 01       	movw	r30, r24
     9be:	e2 0f       	add	r30, r18
     9c0:	f3 1f       	adc	r31, r19
     9c2:	40 83       	st	Z, r20
			ch1 = 'S';
		}
		else if(ch ==5){
			//shape_Z
			for(int i = 0 ; i < 8; i++){
				for(int j = 0; j < 8; j++){
     9c4:	2f 5f       	subi	r18, 0xFF	; 255
     9c6:	3f 4f       	sbci	r19, 0xFF	; 255
     9c8:	02 c0       	rjmp	.+4      	; 0x9ce <__stack+0x16f>
     9ca:	20 e0       	ldi	r18, 0x00	; 0
     9cc:	30 e0       	ldi	r19, 0x00	; 0
     9ce:	28 30       	cpi	r18, 0x08	; 8
     9d0:	31 05       	cpc	r19, r1
     9d2:	2c f3       	brlt	.-54     	; 0x99e <__stack+0x13f>
			}
			ch1 = 'S';
		}
		else if(ch ==5){
			//shape_Z
			for(int i = 0 ; i < 8; i++){
     9d4:	6f 5f       	subi	r22, 0xFF	; 255
     9d6:	7f 4f       	sbci	r23, 0xFF	; 255
     9d8:	02 c0       	rjmp	.+4      	; 0x9de <__stack+0x17f>
     9da:	60 e0       	ldi	r22, 0x00	; 0
     9dc:	70 e0       	ldi	r23, 0x00	; 0
     9de:	68 30       	cpi	r22, 0x08	; 8
     9e0:	71 05       	cpc	r23, r1
     9e2:	9c f3       	brlt	.-26     	; 0x9ca <__stack+0x16b>
	char ch1 ='-';	//next shape
	int score_update = 0;
    while (1) 
    {
		
		int flag = 1;
     9e4:	cc 24       	eor	r12, r12
     9e6:	c3 94       	inc	r12
     9e8:	d1 2c       	mov	r13, r1
			for(int i = 0 ; i < 8; i++){
				for(int j = 0; j < 8; j++){
					current_shape_array[i][j] = shape_Z_array[i][j];
				}
			}
			ch1 = 'Z';
     9ea:	0f 2e       	mov	r0, r31
     9ec:	fa e5       	ldi	r31, 0x5A	; 90
     9ee:	bf 2e       	mov	r11, r31
     9f0:	f0 2d       	mov	r31, r0
     9f2:	33 c0       	rjmp	.+102    	; 0xa5a <__stack+0x1fb>
		}
		else if(ch == 6){
     9f4:	06 97       	sbiw	r24, 0x06	; 6
     9f6:	11 f1       	breq	.+68     	; 0xa3c <__stack+0x1dd>
	char ch1 ='-';	//next shape
	int score_update = 0;
    while (1) 
    {
		
		int flag = 1;
     9f8:	cc 24       	eor	r12, r12
     9fa:	c3 94       	inc	r12
     9fc:	d1 2c       	mov	r13, r1
     9fe:	2d c0       	rjmp	.+90     	; 0xa5a <__stack+0x1fb>
		}
		else if(ch == 6){
			//shape_T
			for(int i = 0 ; i < 8; i++){
				for(int j = 0; j < 8; j++){
					current_shape_array[i][j] = shape_T_array[i][j];
     a00:	cb 01       	movw	r24, r22
     a02:	88 0f       	add	r24, r24
     a04:	99 1f       	adc	r25, r25
     a06:	88 0f       	add	r24, r24
     a08:	99 1f       	adc	r25, r25
     a0a:	88 0f       	add	r24, r24
     a0c:	99 1f       	adc	r25, r25
     a0e:	fc 01       	movw	r30, r24
     a10:	e0 5a       	subi	r30, 0xA0	; 160
     a12:	ff 4f       	sbci	r31, 0xFF	; 255
     a14:	e2 0f       	add	r30, r18
     a16:	f3 1f       	adc	r31, r19
     a18:	40 81       	ld	r20, Z
     a1a:	82 5b       	subi	r24, 0xB2	; 178
     a1c:	9d 4f       	sbci	r25, 0xFD	; 253
     a1e:	fc 01       	movw	r30, r24
     a20:	e2 0f       	add	r30, r18
     a22:	f3 1f       	adc	r31, r19
     a24:	40 83       	st	Z, r20
			ch1 = 'Z';
		}
		else if(ch == 6){
			//shape_T
			for(int i = 0 ; i < 8; i++){
				for(int j = 0; j < 8; j++){
     a26:	2f 5f       	subi	r18, 0xFF	; 255
     a28:	3f 4f       	sbci	r19, 0xFF	; 255
     a2a:	02 c0       	rjmp	.+4      	; 0xa30 <__stack+0x1d1>
     a2c:	20 e0       	ldi	r18, 0x00	; 0
     a2e:	30 e0       	ldi	r19, 0x00	; 0
     a30:	28 30       	cpi	r18, 0x08	; 8
     a32:	31 05       	cpc	r19, r1
     a34:	2c f3       	brlt	.-54     	; 0xa00 <__stack+0x1a1>
			}
			ch1 = 'Z';
		}
		else if(ch == 6){
			//shape_T
			for(int i = 0 ; i < 8; i++){
     a36:	6f 5f       	subi	r22, 0xFF	; 255
     a38:	7f 4f       	sbci	r23, 0xFF	; 255
     a3a:	02 c0       	rjmp	.+4      	; 0xa40 <__stack+0x1e1>
     a3c:	60 e0       	ldi	r22, 0x00	; 0
     a3e:	70 e0       	ldi	r23, 0x00	; 0
     a40:	68 30       	cpi	r22, 0x08	; 8
     a42:	71 05       	cpc	r23, r1
     a44:	9c f3       	brlt	.-26     	; 0xa2c <__stack+0x1cd>
	char ch1 ='-';	//next shape
	int score_update = 0;
    while (1) 
    {
		
		int flag = 1;
     a46:	cc 24       	eor	r12, r12
     a48:	c3 94       	inc	r12
     a4a:	d1 2c       	mov	r13, r1
			for(int i = 0 ; i < 8; i++){
				for(int j = 0; j < 8; j++){
					current_shape_array[i][j] = shape_T_array[i][j];
				}
			}
			ch1 = 'T';
     a4c:	0f 2e       	mov	r0, r31
     a4e:	f4 e5       	ldi	r31, 0x54	; 84
     a50:	bf 2e       	mov	r11, r31
     a52:	f0 2d       	mov	r31, r0
     a54:	02 c0       	rjmp	.+4      	; 0xa5a <__stack+0x1fb>
		}
		else if(ch == 11){
			score_update += 8;
		}
		else if(ch == 9){
			flag = 0;
     a56:	c1 2c       	mov	r12, r1
     a58:	d1 2c       	mov	r13, r1
				}
			}
			ch1 = 'T';
		}
		char score[10];	
		dtostrf(score_update , 0, 2, score);
     a5a:	b7 01       	movw	r22, r14
     a5c:	0f 2c       	mov	r0, r15
     a5e:	00 0c       	add	r0, r0
     a60:	88 0b       	sbc	r24, r24
     a62:	99 0b       	sbc	r25, r25
     a64:	0e 94 8e 05 	call	0xb1c	; 0xb1c <__floatsisf>
     a68:	8e 01       	movw	r16, r28
     a6a:	00 5e       	subi	r16, 0xE0	; 224
     a6c:	1f 4f       	sbci	r17, 0xFF	; 255
     a6e:	22 e0       	ldi	r18, 0x02	; 2
     a70:	40 e0       	ldi	r20, 0x00	; 0
     a72:	0e 94 c9 05 	call	0xb92	; 0xb92 <dtostrf>
		if(flag == 1 ){
     a76:	ca 94       	dec	r12
     a78:	cd 28       	or	r12, r13
     a7a:	39 f5       	brne	.+78     	; 0xaca <__stack+0x26b>
			//Lcd4_Clear();
			char msg[] = "Score : ";
     a7c:	89 e0       	ldi	r24, 0x09	; 9
     a7e:	e6 e3       	ldi	r30, 0x36	; 54
     a80:	f2 e0       	ldi	r31, 0x02	; 2
     a82:	de 01       	movw	r26, r28
     a84:	51 96       	adiw	r26, 0x11	; 17
     a86:	01 90       	ld	r0, Z+
     a88:	0d 92       	st	X+, r0
     a8a:	8a 95       	dec	r24
     a8c:	e1 f7       	brne	.-8      	; 0xa86 <__stack+0x227>
			char msg1[] = "Next piece :   ";
     a8e:	80 e1       	ldi	r24, 0x10	; 16
     a90:	e0 e2       	ldi	r30, 0x20	; 32
     a92:	f2 e0       	ldi	r31, 0x02	; 2
     a94:	de 01       	movw	r26, r28
     a96:	11 96       	adiw	r26, 0x01	; 1
     a98:	01 90       	ld	r0, Z+
     a9a:	0d 92       	st	X+, r0
     a9c:	8a 95       	dec	r24
     a9e:	e1 f7       	brne	.-8      	; 0xa98 <__stack+0x239>
			msg1[13] = ch1;
     aa0:	be 86       	std	Y+14, r11	; 0x0e
			Lcd4_Set_Cursor(1,1);
     aa2:	61 e0       	ldi	r22, 0x01	; 1
     aa4:	81 e0       	ldi	r24, 0x01	; 1
     aa6:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <Lcd4_Set_Cursor>
			Lcd4_Write_String(msg);
     aaa:	ce 01       	movw	r24, r28
     aac:	41 96       	adiw	r24, 0x11	; 17
     aae:	0e 94 84 03 	call	0x708	; 0x708 <Lcd4_Write_String>
			Lcd4_Write_String(score);
     ab2:	c8 01       	movw	r24, r16
     ab4:	0e 94 84 03 	call	0x708	; 0x708 <Lcd4_Write_String>
			Lcd4_Set_Cursor(2,1);
     ab8:	61 e0       	ldi	r22, 0x01	; 1
     aba:	82 e0       	ldi	r24, 0x02	; 2
     abc:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <Lcd4_Set_Cursor>
			Lcd4_Write_String(msg1);
     ac0:	ce 01       	movw	r24, r28
     ac2:	01 96       	adiw	r24, 0x01	; 1
     ac4:	0e 94 84 03 	call	0x708	; 0x708 <Lcd4_Write_String>
     ac8:	61 ce       	rjmp	.-830    	; 0x78c <main+0x40>
		}
		
		else{
			//Lcd4_Clear();
			char msg[] = "Final Score : ";
     aca:	8f e0       	ldi	r24, 0x0F	; 15
     acc:	e0 e3       	ldi	r30, 0x30	; 48
     ace:	f2 e0       	ldi	r31, 0x02	; 2
     ad0:	de 01       	movw	r26, r28
     ad2:	51 96       	adiw	r26, 0x11	; 17
     ad4:	01 90       	ld	r0, Z+
     ad6:	0d 92       	st	X+, r0
     ad8:	8a 95       	dec	r24
     ada:	e1 f7       	brne	.-8      	; 0xad4 <__stack+0x275>
			char msg1[] = "Game Over!    ";
     adc:	8f e0       	ldi	r24, 0x0F	; 15
     ade:	ef e3       	ldi	r30, 0x3F	; 63
     ae0:	f2 e0       	ldi	r31, 0x02	; 2
     ae2:	de 01       	movw	r26, r28
     ae4:	11 96       	adiw	r26, 0x01	; 1
     ae6:	01 90       	ld	r0, Z+
     ae8:	0d 92       	st	X+, r0
     aea:	8a 95       	dec	r24
     aec:	e1 f7       	brne	.-8      	; 0xae6 <__stack+0x287>
			Lcd4_Set_Cursor(1,1);
     aee:	61 e0       	ldi	r22, 0x01	; 1
     af0:	81 e0       	ldi	r24, 0x01	; 1
     af2:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <Lcd4_Set_Cursor>
			Lcd4_Write_String(msg);
     af6:	ce 01       	movw	r24, r28
     af8:	41 96       	adiw	r24, 0x11	; 17
     afa:	0e 94 84 03 	call	0x708	; 0x708 <Lcd4_Write_String>
			Lcd4_Write_String(score);
     afe:	ce 01       	movw	r24, r28
     b00:	80 96       	adiw	r24, 0x20	; 32
     b02:	0e 94 84 03 	call	0x708	; 0x708 <Lcd4_Write_String>
			Lcd4_Set_Cursor(2,1);
     b06:	61 e0       	ldi	r22, 0x01	; 1
     b08:	82 e0       	ldi	r24, 0x02	; 2
     b0a:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <Lcd4_Set_Cursor>
			Lcd4_Write_String(msg1);
     b0e:	ce 01       	movw	r24, r28
     b10:	01 96       	adiw	r24, 0x01	; 1
     b12:	0e 94 84 03 	call	0x708	; 0x708 <Lcd4_Write_String>
				PORTB = get_col(i);
			}
		}*/	
		
		//_delay_us(10);
    }
     b16:	3a ce       	rjmp	.-908    	; 0x78c <main+0x40>

00000b18 <__floatunsisf>:
     b18:	e8 94       	clt
     b1a:	09 c0       	rjmp	.+18     	; 0xb2e <__floatsisf+0x12>

00000b1c <__floatsisf>:
     b1c:	97 fb       	bst	r25, 7
     b1e:	3e f4       	brtc	.+14     	; 0xb2e <__floatsisf+0x12>
     b20:	90 95       	com	r25
     b22:	80 95       	com	r24
     b24:	70 95       	com	r23
     b26:	61 95       	neg	r22
     b28:	7f 4f       	sbci	r23, 0xFF	; 255
     b2a:	8f 4f       	sbci	r24, 0xFF	; 255
     b2c:	9f 4f       	sbci	r25, 0xFF	; 255
     b2e:	99 23       	and	r25, r25
     b30:	a9 f0       	breq	.+42     	; 0xb5c <__floatsisf+0x40>
     b32:	f9 2f       	mov	r31, r25
     b34:	96 e9       	ldi	r25, 0x96	; 150
     b36:	bb 27       	eor	r27, r27
     b38:	93 95       	inc	r25
     b3a:	f6 95       	lsr	r31
     b3c:	87 95       	ror	r24
     b3e:	77 95       	ror	r23
     b40:	67 95       	ror	r22
     b42:	b7 95       	ror	r27
     b44:	f1 11       	cpse	r31, r1
     b46:	f8 cf       	rjmp	.-16     	; 0xb38 <__floatsisf+0x1c>
     b48:	fa f4       	brpl	.+62     	; 0xb88 <__floatsisf+0x6c>
     b4a:	bb 0f       	add	r27, r27
     b4c:	11 f4       	brne	.+4      	; 0xb52 <__floatsisf+0x36>
     b4e:	60 ff       	sbrs	r22, 0
     b50:	1b c0       	rjmp	.+54     	; 0xb88 <__floatsisf+0x6c>
     b52:	6f 5f       	subi	r22, 0xFF	; 255
     b54:	7f 4f       	sbci	r23, 0xFF	; 255
     b56:	8f 4f       	sbci	r24, 0xFF	; 255
     b58:	9f 4f       	sbci	r25, 0xFF	; 255
     b5a:	16 c0       	rjmp	.+44     	; 0xb88 <__floatsisf+0x6c>
     b5c:	88 23       	and	r24, r24
     b5e:	11 f0       	breq	.+4      	; 0xb64 <__floatsisf+0x48>
     b60:	96 e9       	ldi	r25, 0x96	; 150
     b62:	11 c0       	rjmp	.+34     	; 0xb86 <__floatsisf+0x6a>
     b64:	77 23       	and	r23, r23
     b66:	21 f0       	breq	.+8      	; 0xb70 <__floatsisf+0x54>
     b68:	9e e8       	ldi	r25, 0x8E	; 142
     b6a:	87 2f       	mov	r24, r23
     b6c:	76 2f       	mov	r23, r22
     b6e:	05 c0       	rjmp	.+10     	; 0xb7a <__floatsisf+0x5e>
     b70:	66 23       	and	r22, r22
     b72:	71 f0       	breq	.+28     	; 0xb90 <__floatsisf+0x74>
     b74:	96 e8       	ldi	r25, 0x86	; 134
     b76:	86 2f       	mov	r24, r22
     b78:	70 e0       	ldi	r23, 0x00	; 0
     b7a:	60 e0       	ldi	r22, 0x00	; 0
     b7c:	2a f0       	brmi	.+10     	; 0xb88 <__floatsisf+0x6c>
     b7e:	9a 95       	dec	r25
     b80:	66 0f       	add	r22, r22
     b82:	77 1f       	adc	r23, r23
     b84:	88 1f       	adc	r24, r24
     b86:	da f7       	brpl	.-10     	; 0xb7e <__floatsisf+0x62>
     b88:	88 0f       	add	r24, r24
     b8a:	96 95       	lsr	r25
     b8c:	87 95       	ror	r24
     b8e:	97 f9       	bld	r25, 7
     b90:	08 95       	ret

00000b92 <dtostrf>:
     b92:	ef 92       	push	r14
     b94:	0f 93       	push	r16
     b96:	1f 93       	push	r17
     b98:	cf 93       	push	r28
     b9a:	df 93       	push	r29
     b9c:	e8 01       	movw	r28, r16
     b9e:	47 fd       	sbrc	r20, 7
     ba0:	02 c0       	rjmp	.+4      	; 0xba6 <dtostrf+0x14>
     ba2:	34 e0       	ldi	r19, 0x04	; 4
     ba4:	01 c0       	rjmp	.+2      	; 0xba8 <dtostrf+0x16>
     ba6:	34 e1       	ldi	r19, 0x14	; 20
     ba8:	04 2e       	mov	r0, r20
     baa:	00 0c       	add	r0, r0
     bac:	55 0b       	sbc	r21, r21
     bae:	57 ff       	sbrs	r21, 7
     bb0:	03 c0       	rjmp	.+6      	; 0xbb8 <dtostrf+0x26>
     bb2:	51 95       	neg	r21
     bb4:	41 95       	neg	r20
     bb6:	51 09       	sbc	r21, r1
     bb8:	e3 2e       	mov	r14, r19
     bba:	02 2f       	mov	r16, r18
     bbc:	24 2f       	mov	r18, r20
     bbe:	ae 01       	movw	r20, r28
     bc0:	0e 94 e9 05 	call	0xbd2	; 0xbd2 <dtoa_prf>
     bc4:	ce 01       	movw	r24, r28
     bc6:	df 91       	pop	r29
     bc8:	cf 91       	pop	r28
     bca:	1f 91       	pop	r17
     bcc:	0f 91       	pop	r16
     bce:	ef 90       	pop	r14
     bd0:	08 95       	ret

00000bd2 <dtoa_prf>:
     bd2:	a9 e0       	ldi	r26, 0x09	; 9
     bd4:	b0 e0       	ldi	r27, 0x00	; 0
     bd6:	ef ee       	ldi	r30, 0xEF	; 239
     bd8:	f5 e0       	ldi	r31, 0x05	; 5
     bda:	0c 94 21 08 	jmp	0x1042	; 0x1042 <__prologue_saves__+0xc>
     bde:	6a 01       	movw	r12, r20
     be0:	12 2f       	mov	r17, r18
     be2:	b0 2e       	mov	r11, r16
     be4:	2b e3       	ldi	r18, 0x3B	; 59
     be6:	20 17       	cp	r18, r16
     be8:	20 f0       	brcs	.+8      	; 0xbf2 <dtoa_prf+0x20>
     bea:	ff 24       	eor	r15, r15
     bec:	f3 94       	inc	r15
     bee:	f0 0e       	add	r15, r16
     bf0:	02 c0       	rjmp	.+4      	; 0xbf6 <dtoa_prf+0x24>
     bf2:	2c e3       	ldi	r18, 0x3C	; 60
     bf4:	f2 2e       	mov	r15, r18
     bf6:	0f 2d       	mov	r16, r15
     bf8:	27 e0       	ldi	r18, 0x07	; 7
     bfa:	ae 01       	movw	r20, r28
     bfc:	4f 5f       	subi	r20, 0xFF	; 255
     bfe:	5f 4f       	sbci	r21, 0xFF	; 255
     c00:	0e 94 43 07 	call	0xe86	; 0xe86 <__ftoa_engine>
     c04:	bc 01       	movw	r22, r24
     c06:	49 81       	ldd	r20, Y+1	; 0x01
     c08:	84 2f       	mov	r24, r20
     c0a:	89 70       	andi	r24, 0x09	; 9
     c0c:	81 30       	cpi	r24, 0x01	; 1
     c0e:	31 f0       	breq	.+12     	; 0xc1c <dtoa_prf+0x4a>
     c10:	e1 fc       	sbrc	r14, 1
     c12:	06 c0       	rjmp	.+12     	; 0xc20 <dtoa_prf+0x4e>
     c14:	e0 fe       	sbrs	r14, 0
     c16:	06 c0       	rjmp	.+12     	; 0xc24 <dtoa_prf+0x52>
     c18:	90 e2       	ldi	r25, 0x20	; 32
     c1a:	05 c0       	rjmp	.+10     	; 0xc26 <dtoa_prf+0x54>
     c1c:	9d e2       	ldi	r25, 0x2D	; 45
     c1e:	03 c0       	rjmp	.+6      	; 0xc26 <dtoa_prf+0x54>
     c20:	9b e2       	ldi	r25, 0x2B	; 43
     c22:	01 c0       	rjmp	.+2      	; 0xc26 <dtoa_prf+0x54>
     c24:	90 e0       	ldi	r25, 0x00	; 0
     c26:	5e 2d       	mov	r21, r14
     c28:	50 71       	andi	r21, 0x10	; 16
     c2a:	43 ff       	sbrs	r20, 3
     c2c:	3c c0       	rjmp	.+120    	; 0xca6 <dtoa_prf+0xd4>
     c2e:	91 11       	cpse	r25, r1
     c30:	02 c0       	rjmp	.+4      	; 0xc36 <dtoa_prf+0x64>
     c32:	83 e0       	ldi	r24, 0x03	; 3
     c34:	01 c0       	rjmp	.+2      	; 0xc38 <dtoa_prf+0x66>
     c36:	84 e0       	ldi	r24, 0x04	; 4
     c38:	81 17       	cp	r24, r17
     c3a:	18 f4       	brcc	.+6      	; 0xc42 <dtoa_prf+0x70>
     c3c:	21 2f       	mov	r18, r17
     c3e:	28 1b       	sub	r18, r24
     c40:	01 c0       	rjmp	.+2      	; 0xc44 <dtoa_prf+0x72>
     c42:	20 e0       	ldi	r18, 0x00	; 0
     c44:	51 11       	cpse	r21, r1
     c46:	0b c0       	rjmp	.+22     	; 0xc5e <dtoa_prf+0x8c>
     c48:	f6 01       	movw	r30, r12
     c4a:	82 2f       	mov	r24, r18
     c4c:	30 e2       	ldi	r19, 0x20	; 32
     c4e:	88 23       	and	r24, r24
     c50:	19 f0       	breq	.+6      	; 0xc58 <dtoa_prf+0x86>
     c52:	31 93       	st	Z+, r19
     c54:	81 50       	subi	r24, 0x01	; 1
     c56:	fb cf       	rjmp	.-10     	; 0xc4e <dtoa_prf+0x7c>
     c58:	c2 0e       	add	r12, r18
     c5a:	d1 1c       	adc	r13, r1
     c5c:	20 e0       	ldi	r18, 0x00	; 0
     c5e:	99 23       	and	r25, r25
     c60:	29 f0       	breq	.+10     	; 0xc6c <dtoa_prf+0x9a>
     c62:	d6 01       	movw	r26, r12
     c64:	9c 93       	st	X, r25
     c66:	f6 01       	movw	r30, r12
     c68:	31 96       	adiw	r30, 0x01	; 1
     c6a:	6f 01       	movw	r12, r30
     c6c:	c6 01       	movw	r24, r12
     c6e:	03 96       	adiw	r24, 0x03	; 3
     c70:	e2 fe       	sbrs	r14, 2
     c72:	0a c0       	rjmp	.+20     	; 0xc88 <dtoa_prf+0xb6>
     c74:	3e e4       	ldi	r19, 0x4E	; 78
     c76:	d6 01       	movw	r26, r12
     c78:	3c 93       	st	X, r19
     c7a:	41 e4       	ldi	r20, 0x41	; 65
     c7c:	11 96       	adiw	r26, 0x01	; 1
     c7e:	4c 93       	st	X, r20
     c80:	11 97       	sbiw	r26, 0x01	; 1
     c82:	12 96       	adiw	r26, 0x02	; 2
     c84:	3c 93       	st	X, r19
     c86:	06 c0       	rjmp	.+12     	; 0xc94 <dtoa_prf+0xc2>
     c88:	3e e6       	ldi	r19, 0x6E	; 110
     c8a:	f6 01       	movw	r30, r12
     c8c:	30 83       	st	Z, r19
     c8e:	41 e6       	ldi	r20, 0x61	; 97
     c90:	41 83       	std	Z+1, r20	; 0x01
     c92:	32 83       	std	Z+2, r19	; 0x02
     c94:	fc 01       	movw	r30, r24
     c96:	32 2f       	mov	r19, r18
     c98:	40 e2       	ldi	r20, 0x20	; 32
     c9a:	33 23       	and	r19, r19
     c9c:	09 f4       	brne	.+2      	; 0xca0 <dtoa_prf+0xce>
     c9e:	42 c0       	rjmp	.+132    	; 0xd24 <dtoa_prf+0x152>
     ca0:	41 93       	st	Z+, r20
     ca2:	31 50       	subi	r19, 0x01	; 1
     ca4:	fa cf       	rjmp	.-12     	; 0xc9a <dtoa_prf+0xc8>
     ca6:	42 ff       	sbrs	r20, 2
     ca8:	44 c0       	rjmp	.+136    	; 0xd32 <dtoa_prf+0x160>
     caa:	91 11       	cpse	r25, r1
     cac:	02 c0       	rjmp	.+4      	; 0xcb2 <dtoa_prf+0xe0>
     cae:	83 e0       	ldi	r24, 0x03	; 3
     cb0:	01 c0       	rjmp	.+2      	; 0xcb4 <dtoa_prf+0xe2>
     cb2:	84 e0       	ldi	r24, 0x04	; 4
     cb4:	81 17       	cp	r24, r17
     cb6:	18 f4       	brcc	.+6      	; 0xcbe <dtoa_prf+0xec>
     cb8:	21 2f       	mov	r18, r17
     cba:	28 1b       	sub	r18, r24
     cbc:	01 c0       	rjmp	.+2      	; 0xcc0 <dtoa_prf+0xee>
     cbe:	20 e0       	ldi	r18, 0x00	; 0
     cc0:	51 11       	cpse	r21, r1
     cc2:	0b c0       	rjmp	.+22     	; 0xcda <dtoa_prf+0x108>
     cc4:	f6 01       	movw	r30, r12
     cc6:	82 2f       	mov	r24, r18
     cc8:	30 e2       	ldi	r19, 0x20	; 32
     cca:	88 23       	and	r24, r24
     ccc:	19 f0       	breq	.+6      	; 0xcd4 <dtoa_prf+0x102>
     cce:	31 93       	st	Z+, r19
     cd0:	81 50       	subi	r24, 0x01	; 1
     cd2:	fb cf       	rjmp	.-10     	; 0xcca <dtoa_prf+0xf8>
     cd4:	c2 0e       	add	r12, r18
     cd6:	d1 1c       	adc	r13, r1
     cd8:	20 e0       	ldi	r18, 0x00	; 0
     cda:	99 23       	and	r25, r25
     cdc:	29 f0       	breq	.+10     	; 0xce8 <dtoa_prf+0x116>
     cde:	d6 01       	movw	r26, r12
     ce0:	9c 93       	st	X, r25
     ce2:	f6 01       	movw	r30, r12
     ce4:	31 96       	adiw	r30, 0x01	; 1
     ce6:	6f 01       	movw	r12, r30
     ce8:	c6 01       	movw	r24, r12
     cea:	03 96       	adiw	r24, 0x03	; 3
     cec:	e2 fe       	sbrs	r14, 2
     cee:	0b c0       	rjmp	.+22     	; 0xd06 <dtoa_prf+0x134>
     cf0:	39 e4       	ldi	r19, 0x49	; 73
     cf2:	d6 01       	movw	r26, r12
     cf4:	3c 93       	st	X, r19
     cf6:	3e e4       	ldi	r19, 0x4E	; 78
     cf8:	11 96       	adiw	r26, 0x01	; 1
     cfa:	3c 93       	st	X, r19
     cfc:	11 97       	sbiw	r26, 0x01	; 1
     cfe:	36 e4       	ldi	r19, 0x46	; 70
     d00:	12 96       	adiw	r26, 0x02	; 2
     d02:	3c 93       	st	X, r19
     d04:	07 c0       	rjmp	.+14     	; 0xd14 <dtoa_prf+0x142>
     d06:	39 e6       	ldi	r19, 0x69	; 105
     d08:	f6 01       	movw	r30, r12
     d0a:	30 83       	st	Z, r19
     d0c:	3e e6       	ldi	r19, 0x6E	; 110
     d0e:	31 83       	std	Z+1, r19	; 0x01
     d10:	36 e6       	ldi	r19, 0x66	; 102
     d12:	32 83       	std	Z+2, r19	; 0x02
     d14:	fc 01       	movw	r30, r24
     d16:	32 2f       	mov	r19, r18
     d18:	40 e2       	ldi	r20, 0x20	; 32
     d1a:	33 23       	and	r19, r19
     d1c:	19 f0       	breq	.+6      	; 0xd24 <dtoa_prf+0x152>
     d1e:	41 93       	st	Z+, r20
     d20:	31 50       	subi	r19, 0x01	; 1
     d22:	fb cf       	rjmp	.-10     	; 0xd1a <dtoa_prf+0x148>
     d24:	fc 01       	movw	r30, r24
     d26:	e2 0f       	add	r30, r18
     d28:	f1 1d       	adc	r31, r1
     d2a:	10 82       	st	Z, r1
     d2c:	8e ef       	ldi	r24, 0xFE	; 254
     d2e:	9f ef       	ldi	r25, 0xFF	; 255
     d30:	a6 c0       	rjmp	.+332    	; 0xe7e <dtoa_prf+0x2ac>
     d32:	21 e0       	ldi	r18, 0x01	; 1
     d34:	30 e0       	ldi	r19, 0x00	; 0
     d36:	91 11       	cpse	r25, r1
     d38:	02 c0       	rjmp	.+4      	; 0xd3e <dtoa_prf+0x16c>
     d3a:	20 e0       	ldi	r18, 0x00	; 0
     d3c:	30 e0       	ldi	r19, 0x00	; 0
     d3e:	16 16       	cp	r1, r22
     d40:	17 06       	cpc	r1, r23
     d42:	1c f4       	brge	.+6      	; 0xd4a <dtoa_prf+0x178>
     d44:	fb 01       	movw	r30, r22
     d46:	31 96       	adiw	r30, 0x01	; 1
     d48:	02 c0       	rjmp	.+4      	; 0xd4e <dtoa_prf+0x17c>
     d4a:	e1 e0       	ldi	r30, 0x01	; 1
     d4c:	f0 e0       	ldi	r31, 0x00	; 0
     d4e:	2e 0f       	add	r18, r30
     d50:	3f 1f       	adc	r19, r31
     d52:	bb 20       	and	r11, r11
     d54:	21 f0       	breq	.+8      	; 0xd5e <dtoa_prf+0x18c>
     d56:	eb 2d       	mov	r30, r11
     d58:	f0 e0       	ldi	r31, 0x00	; 0
     d5a:	31 96       	adiw	r30, 0x01	; 1
     d5c:	02 c0       	rjmp	.+4      	; 0xd62 <dtoa_prf+0x190>
     d5e:	e0 e0       	ldi	r30, 0x00	; 0
     d60:	f0 e0       	ldi	r31, 0x00	; 0
     d62:	2e 0f       	add	r18, r30
     d64:	3f 1f       	adc	r19, r31
     d66:	e1 2f       	mov	r30, r17
     d68:	f0 e0       	ldi	r31, 0x00	; 0
     d6a:	2e 17       	cp	r18, r30
     d6c:	3f 07       	cpc	r19, r31
     d6e:	1c f4       	brge	.+6      	; 0xd76 <dtoa_prf+0x1a4>
     d70:	12 1b       	sub	r17, r18
     d72:	21 2f       	mov	r18, r17
     d74:	01 c0       	rjmp	.+2      	; 0xd78 <dtoa_prf+0x1a6>
     d76:	20 e0       	ldi	r18, 0x00	; 0
     d78:	8e 2d       	mov	r24, r14
     d7a:	88 71       	andi	r24, 0x18	; 24
     d7c:	59 f4       	brne	.+22     	; 0xd94 <dtoa_prf+0x1c2>
     d7e:	f6 01       	movw	r30, r12
     d80:	82 2f       	mov	r24, r18
     d82:	30 e2       	ldi	r19, 0x20	; 32
     d84:	88 23       	and	r24, r24
     d86:	19 f0       	breq	.+6      	; 0xd8e <dtoa_prf+0x1bc>
     d88:	31 93       	st	Z+, r19
     d8a:	81 50       	subi	r24, 0x01	; 1
     d8c:	fb cf       	rjmp	.-10     	; 0xd84 <dtoa_prf+0x1b2>
     d8e:	c2 0e       	add	r12, r18
     d90:	d1 1c       	adc	r13, r1
     d92:	20 e0       	ldi	r18, 0x00	; 0
     d94:	99 23       	and	r25, r25
     d96:	29 f0       	breq	.+10     	; 0xda2 <dtoa_prf+0x1d0>
     d98:	d6 01       	movw	r26, r12
     d9a:	9c 93       	st	X, r25
     d9c:	f6 01       	movw	r30, r12
     d9e:	31 96       	adiw	r30, 0x01	; 1
     da0:	6f 01       	movw	r12, r30
     da2:	51 11       	cpse	r21, r1
     da4:	0b c0       	rjmp	.+22     	; 0xdbc <dtoa_prf+0x1ea>
     da6:	f6 01       	movw	r30, r12
     da8:	82 2f       	mov	r24, r18
     daa:	90 e3       	ldi	r25, 0x30	; 48
     dac:	88 23       	and	r24, r24
     dae:	19 f0       	breq	.+6      	; 0xdb6 <dtoa_prf+0x1e4>
     db0:	91 93       	st	Z+, r25
     db2:	81 50       	subi	r24, 0x01	; 1
     db4:	fb cf       	rjmp	.-10     	; 0xdac <dtoa_prf+0x1da>
     db6:	c2 0e       	add	r12, r18
     db8:	d1 1c       	adc	r13, r1
     dba:	20 e0       	ldi	r18, 0x00	; 0
     dbc:	0f 2d       	mov	r16, r15
     dbe:	06 0f       	add	r16, r22
     dc0:	9a 81       	ldd	r25, Y+2	; 0x02
     dc2:	34 2f       	mov	r19, r20
     dc4:	30 71       	andi	r19, 0x10	; 16
     dc6:	44 ff       	sbrs	r20, 4
     dc8:	03 c0       	rjmp	.+6      	; 0xdd0 <dtoa_prf+0x1fe>
     dca:	91 33       	cpi	r25, 0x31	; 49
     dcc:	09 f4       	brne	.+2      	; 0xdd0 <dtoa_prf+0x1fe>
     dce:	01 50       	subi	r16, 0x01	; 1
     dd0:	10 16       	cp	r1, r16
     dd2:	24 f4       	brge	.+8      	; 0xddc <dtoa_prf+0x20a>
     dd4:	09 30       	cpi	r16, 0x09	; 9
     dd6:	18 f0       	brcs	.+6      	; 0xdde <dtoa_prf+0x20c>
     dd8:	08 e0       	ldi	r16, 0x08	; 8
     dda:	01 c0       	rjmp	.+2      	; 0xdde <dtoa_prf+0x20c>
     ddc:	01 e0       	ldi	r16, 0x01	; 1
     dde:	ab 01       	movw	r20, r22
     de0:	77 ff       	sbrs	r23, 7
     de2:	02 c0       	rjmp	.+4      	; 0xde8 <dtoa_prf+0x216>
     de4:	40 e0       	ldi	r20, 0x00	; 0
     de6:	50 e0       	ldi	r21, 0x00	; 0
     de8:	fb 01       	movw	r30, r22
     dea:	e4 1b       	sub	r30, r20
     dec:	f5 0b       	sbc	r31, r21
     dee:	a1 e0       	ldi	r26, 0x01	; 1
     df0:	b0 e0       	ldi	r27, 0x00	; 0
     df2:	ac 0f       	add	r26, r28
     df4:	bd 1f       	adc	r27, r29
     df6:	ea 0f       	add	r30, r26
     df8:	fb 1f       	adc	r31, r27
     dfa:	8e e2       	ldi	r24, 0x2E	; 46
     dfc:	a8 2e       	mov	r10, r24
     dfe:	4b 01       	movw	r8, r22
     e00:	80 1a       	sub	r8, r16
     e02:	91 08       	sbc	r9, r1
     e04:	0b 2d       	mov	r16, r11
     e06:	10 e0       	ldi	r17, 0x00	; 0
     e08:	11 95       	neg	r17
     e0a:	01 95       	neg	r16
     e0c:	11 09       	sbc	r17, r1
     e0e:	4f 3f       	cpi	r20, 0xFF	; 255
     e10:	bf ef       	ldi	r27, 0xFF	; 255
     e12:	5b 07       	cpc	r21, r27
     e14:	21 f4       	brne	.+8      	; 0xe1e <dtoa_prf+0x24c>
     e16:	d6 01       	movw	r26, r12
     e18:	ac 92       	st	X, r10
     e1a:	11 96       	adiw	r26, 0x01	; 1
     e1c:	6d 01       	movw	r12, r26
     e1e:	64 17       	cp	r22, r20
     e20:	75 07       	cpc	r23, r21
     e22:	2c f0       	brlt	.+10     	; 0xe2e <dtoa_prf+0x25c>
     e24:	84 16       	cp	r8, r20
     e26:	95 06       	cpc	r9, r21
     e28:	14 f4       	brge	.+4      	; 0xe2e <dtoa_prf+0x25c>
     e2a:	81 81       	ldd	r24, Z+1	; 0x01
     e2c:	01 c0       	rjmp	.+2      	; 0xe30 <dtoa_prf+0x25e>
     e2e:	80 e3       	ldi	r24, 0x30	; 48
     e30:	41 50       	subi	r20, 0x01	; 1
     e32:	51 09       	sbc	r21, r1
     e34:	31 96       	adiw	r30, 0x01	; 1
     e36:	d6 01       	movw	r26, r12
     e38:	11 96       	adiw	r26, 0x01	; 1
     e3a:	7d 01       	movw	r14, r26
     e3c:	40 17       	cp	r20, r16
     e3e:	51 07       	cpc	r21, r17
     e40:	24 f0       	brlt	.+8      	; 0xe4a <dtoa_prf+0x278>
     e42:	d6 01       	movw	r26, r12
     e44:	8c 93       	st	X, r24
     e46:	67 01       	movw	r12, r14
     e48:	e2 cf       	rjmp	.-60     	; 0xe0e <dtoa_prf+0x23c>
     e4a:	64 17       	cp	r22, r20
     e4c:	75 07       	cpc	r23, r21
     e4e:	39 f4       	brne	.+14     	; 0xe5e <dtoa_prf+0x28c>
     e50:	96 33       	cpi	r25, 0x36	; 54
     e52:	20 f4       	brcc	.+8      	; 0xe5c <dtoa_prf+0x28a>
     e54:	95 33       	cpi	r25, 0x35	; 53
     e56:	19 f4       	brne	.+6      	; 0xe5e <dtoa_prf+0x28c>
     e58:	31 11       	cpse	r19, r1
     e5a:	01 c0       	rjmp	.+2      	; 0xe5e <dtoa_prf+0x28c>
     e5c:	81 e3       	ldi	r24, 0x31	; 49
     e5e:	f6 01       	movw	r30, r12
     e60:	80 83       	st	Z, r24
     e62:	f7 01       	movw	r30, r14
     e64:	82 2f       	mov	r24, r18
     e66:	90 e2       	ldi	r25, 0x20	; 32
     e68:	88 23       	and	r24, r24
     e6a:	19 f0       	breq	.+6      	; 0xe72 <dtoa_prf+0x2a0>
     e6c:	91 93       	st	Z+, r25
     e6e:	81 50       	subi	r24, 0x01	; 1
     e70:	fb cf       	rjmp	.-10     	; 0xe68 <dtoa_prf+0x296>
     e72:	f7 01       	movw	r30, r14
     e74:	e2 0f       	add	r30, r18
     e76:	f1 1d       	adc	r31, r1
     e78:	10 82       	st	Z, r1
     e7a:	80 e0       	ldi	r24, 0x00	; 0
     e7c:	90 e0       	ldi	r25, 0x00	; 0
     e7e:	29 96       	adiw	r28, 0x09	; 9
     e80:	ec e0       	ldi	r30, 0x0C	; 12
     e82:	0c 94 3d 08 	jmp	0x107a	; 0x107a <__epilogue_restores__+0xc>

00000e86 <__ftoa_engine>:
     e86:	28 30       	cpi	r18, 0x08	; 8
     e88:	08 f0       	brcs	.+2      	; 0xe8c <__ftoa_engine+0x6>
     e8a:	27 e0       	ldi	r18, 0x07	; 7
     e8c:	33 27       	eor	r19, r19
     e8e:	da 01       	movw	r26, r20
     e90:	99 0f       	add	r25, r25
     e92:	31 1d       	adc	r19, r1
     e94:	87 fd       	sbrc	r24, 7
     e96:	91 60       	ori	r25, 0x01	; 1
     e98:	00 96       	adiw	r24, 0x00	; 0
     e9a:	61 05       	cpc	r22, r1
     e9c:	71 05       	cpc	r23, r1
     e9e:	39 f4       	brne	.+14     	; 0xeae <__ftoa_engine+0x28>
     ea0:	32 60       	ori	r19, 0x02	; 2
     ea2:	2e 5f       	subi	r18, 0xFE	; 254
     ea4:	3d 93       	st	X+, r19
     ea6:	30 e3       	ldi	r19, 0x30	; 48
     ea8:	2a 95       	dec	r18
     eaa:	e1 f7       	brne	.-8      	; 0xea4 <__ftoa_engine+0x1e>
     eac:	08 95       	ret
     eae:	9f 3f       	cpi	r25, 0xFF	; 255
     eb0:	30 f0       	brcs	.+12     	; 0xebe <__ftoa_engine+0x38>
     eb2:	80 38       	cpi	r24, 0x80	; 128
     eb4:	71 05       	cpc	r23, r1
     eb6:	61 05       	cpc	r22, r1
     eb8:	09 f0       	breq	.+2      	; 0xebc <__ftoa_engine+0x36>
     eba:	3c 5f       	subi	r19, 0xFC	; 252
     ebc:	3c 5f       	subi	r19, 0xFC	; 252
     ebe:	3d 93       	st	X+, r19
     ec0:	91 30       	cpi	r25, 0x01	; 1
     ec2:	08 f0       	brcs	.+2      	; 0xec6 <__ftoa_engine+0x40>
     ec4:	80 68       	ori	r24, 0x80	; 128
     ec6:	91 1d       	adc	r25, r1
     ec8:	df 93       	push	r29
     eca:	cf 93       	push	r28
     ecc:	1f 93       	push	r17
     ece:	0f 93       	push	r16
     ed0:	ff 92       	push	r15
     ed2:	ef 92       	push	r14
     ed4:	19 2f       	mov	r17, r25
     ed6:	98 7f       	andi	r25, 0xF8	; 248
     ed8:	96 95       	lsr	r25
     eda:	e9 2f       	mov	r30, r25
     edc:	96 95       	lsr	r25
     ede:	96 95       	lsr	r25
     ee0:	e9 0f       	add	r30, r25
     ee2:	ff 27       	eor	r31, r31
     ee4:	e2 55       	subi	r30, 0x52	; 82
     ee6:	ff 4f       	sbci	r31, 0xFF	; 255
     ee8:	99 27       	eor	r25, r25
     eea:	33 27       	eor	r19, r19
     eec:	ee 24       	eor	r14, r14
     eee:	ff 24       	eor	r15, r15
     ef0:	a7 01       	movw	r20, r14
     ef2:	e7 01       	movw	r28, r14
     ef4:	05 90       	lpm	r0, Z+
     ef6:	08 94       	sec
     ef8:	07 94       	ror	r0
     efa:	28 f4       	brcc	.+10     	; 0xf06 <__ftoa_engine+0x80>
     efc:	36 0f       	add	r19, r22
     efe:	e7 1e       	adc	r14, r23
     f00:	f8 1e       	adc	r15, r24
     f02:	49 1f       	adc	r20, r25
     f04:	51 1d       	adc	r21, r1
     f06:	66 0f       	add	r22, r22
     f08:	77 1f       	adc	r23, r23
     f0a:	88 1f       	adc	r24, r24
     f0c:	99 1f       	adc	r25, r25
     f0e:	06 94       	lsr	r0
     f10:	a1 f7       	brne	.-24     	; 0xefa <__ftoa_engine+0x74>
     f12:	05 90       	lpm	r0, Z+
     f14:	07 94       	ror	r0
     f16:	28 f4       	brcc	.+10     	; 0xf22 <__ftoa_engine+0x9c>
     f18:	e7 0e       	add	r14, r23
     f1a:	f8 1e       	adc	r15, r24
     f1c:	49 1f       	adc	r20, r25
     f1e:	56 1f       	adc	r21, r22
     f20:	c1 1d       	adc	r28, r1
     f22:	77 0f       	add	r23, r23
     f24:	88 1f       	adc	r24, r24
     f26:	99 1f       	adc	r25, r25
     f28:	66 1f       	adc	r22, r22
     f2a:	06 94       	lsr	r0
     f2c:	a1 f7       	brne	.-24     	; 0xf16 <__ftoa_engine+0x90>
     f2e:	05 90       	lpm	r0, Z+
     f30:	07 94       	ror	r0
     f32:	28 f4       	brcc	.+10     	; 0xf3e <__ftoa_engine+0xb8>
     f34:	f8 0e       	add	r15, r24
     f36:	49 1f       	adc	r20, r25
     f38:	56 1f       	adc	r21, r22
     f3a:	c7 1f       	adc	r28, r23
     f3c:	d1 1d       	adc	r29, r1
     f3e:	88 0f       	add	r24, r24
     f40:	99 1f       	adc	r25, r25
     f42:	66 1f       	adc	r22, r22
     f44:	77 1f       	adc	r23, r23
     f46:	06 94       	lsr	r0
     f48:	a1 f7       	brne	.-24     	; 0xf32 <__ftoa_engine+0xac>
     f4a:	05 90       	lpm	r0, Z+
     f4c:	07 94       	ror	r0
     f4e:	20 f4       	brcc	.+8      	; 0xf58 <__ftoa_engine+0xd2>
     f50:	49 0f       	add	r20, r25
     f52:	56 1f       	adc	r21, r22
     f54:	c7 1f       	adc	r28, r23
     f56:	d8 1f       	adc	r29, r24
     f58:	99 0f       	add	r25, r25
     f5a:	66 1f       	adc	r22, r22
     f5c:	77 1f       	adc	r23, r23
     f5e:	88 1f       	adc	r24, r24
     f60:	06 94       	lsr	r0
     f62:	a9 f7       	brne	.-22     	; 0xf4e <__ftoa_engine+0xc8>
     f64:	84 91       	lpm	r24, Z
     f66:	10 95       	com	r17
     f68:	17 70       	andi	r17, 0x07	; 7
     f6a:	41 f0       	breq	.+16     	; 0xf7c <__ftoa_engine+0xf6>
     f6c:	d6 95       	lsr	r29
     f6e:	c7 95       	ror	r28
     f70:	57 95       	ror	r21
     f72:	47 95       	ror	r20
     f74:	f7 94       	ror	r15
     f76:	e7 94       	ror	r14
     f78:	1a 95       	dec	r17
     f7a:	c1 f7       	brne	.-16     	; 0xf6c <__ftoa_engine+0xe6>
     f7c:	e4 e5       	ldi	r30, 0x54	; 84
     f7e:	f0 e0       	ldi	r31, 0x00	; 0
     f80:	68 94       	set
     f82:	15 90       	lpm	r1, Z+
     f84:	15 91       	lpm	r17, Z+
     f86:	35 91       	lpm	r19, Z+
     f88:	65 91       	lpm	r22, Z+
     f8a:	95 91       	lpm	r25, Z+
     f8c:	05 90       	lpm	r0, Z+
     f8e:	7f e2       	ldi	r23, 0x2F	; 47
     f90:	73 95       	inc	r23
     f92:	e1 18       	sub	r14, r1
     f94:	f1 0a       	sbc	r15, r17
     f96:	43 0b       	sbc	r20, r19
     f98:	56 0b       	sbc	r21, r22
     f9a:	c9 0b       	sbc	r28, r25
     f9c:	d0 09       	sbc	r29, r0
     f9e:	c0 f7       	brcc	.-16     	; 0xf90 <__ftoa_engine+0x10a>
     fa0:	e1 0c       	add	r14, r1
     fa2:	f1 1e       	adc	r15, r17
     fa4:	43 1f       	adc	r20, r19
     fa6:	56 1f       	adc	r21, r22
     fa8:	c9 1f       	adc	r28, r25
     faa:	d0 1d       	adc	r29, r0
     fac:	7e f4       	brtc	.+30     	; 0xfcc <__ftoa_engine+0x146>
     fae:	70 33       	cpi	r23, 0x30	; 48
     fb0:	11 f4       	brne	.+4      	; 0xfb6 <__ftoa_engine+0x130>
     fb2:	8a 95       	dec	r24
     fb4:	e6 cf       	rjmp	.-52     	; 0xf82 <__ftoa_engine+0xfc>
     fb6:	e8 94       	clt
     fb8:	01 50       	subi	r16, 0x01	; 1
     fba:	30 f0       	brcs	.+12     	; 0xfc8 <__ftoa_engine+0x142>
     fbc:	08 0f       	add	r16, r24
     fbe:	0a f4       	brpl	.+2      	; 0xfc2 <__ftoa_engine+0x13c>
     fc0:	00 27       	eor	r16, r16
     fc2:	02 17       	cp	r16, r18
     fc4:	08 f4       	brcc	.+2      	; 0xfc8 <__ftoa_engine+0x142>
     fc6:	20 2f       	mov	r18, r16
     fc8:	23 95       	inc	r18
     fca:	02 2f       	mov	r16, r18
     fcc:	7a 33       	cpi	r23, 0x3A	; 58
     fce:	28 f0       	brcs	.+10     	; 0xfda <__ftoa_engine+0x154>
     fd0:	79 e3       	ldi	r23, 0x39	; 57
     fd2:	7d 93       	st	X+, r23
     fd4:	2a 95       	dec	r18
     fd6:	e9 f7       	brne	.-6      	; 0xfd2 <__ftoa_engine+0x14c>
     fd8:	10 c0       	rjmp	.+32     	; 0xffa <__ftoa_engine+0x174>
     fda:	7d 93       	st	X+, r23
     fdc:	2a 95       	dec	r18
     fde:	89 f6       	brne	.-94     	; 0xf82 <__ftoa_engine+0xfc>
     fe0:	06 94       	lsr	r0
     fe2:	97 95       	ror	r25
     fe4:	67 95       	ror	r22
     fe6:	37 95       	ror	r19
     fe8:	17 95       	ror	r17
     fea:	17 94       	ror	r1
     fec:	e1 18       	sub	r14, r1
     fee:	f1 0a       	sbc	r15, r17
     ff0:	43 0b       	sbc	r20, r19
     ff2:	56 0b       	sbc	r21, r22
     ff4:	c9 0b       	sbc	r28, r25
     ff6:	d0 09       	sbc	r29, r0
     ff8:	98 f0       	brcs	.+38     	; 0x1020 <__ftoa_engine+0x19a>
     ffa:	23 95       	inc	r18
     ffc:	7e 91       	ld	r23, -X
     ffe:	73 95       	inc	r23
    1000:	7a 33       	cpi	r23, 0x3A	; 58
    1002:	08 f0       	brcs	.+2      	; 0x1006 <__ftoa_engine+0x180>
    1004:	70 e3       	ldi	r23, 0x30	; 48
    1006:	7c 93       	st	X, r23
    1008:	20 13       	cpse	r18, r16
    100a:	b8 f7       	brcc	.-18     	; 0xffa <__ftoa_engine+0x174>
    100c:	7e 91       	ld	r23, -X
    100e:	70 61       	ori	r23, 0x10	; 16
    1010:	7d 93       	st	X+, r23
    1012:	30 f0       	brcs	.+12     	; 0x1020 <__ftoa_engine+0x19a>
    1014:	83 95       	inc	r24
    1016:	71 e3       	ldi	r23, 0x31	; 49
    1018:	7d 93       	st	X+, r23
    101a:	70 e3       	ldi	r23, 0x30	; 48
    101c:	2a 95       	dec	r18
    101e:	e1 f7       	brne	.-8      	; 0x1018 <__ftoa_engine+0x192>
    1020:	11 24       	eor	r1, r1
    1022:	ef 90       	pop	r14
    1024:	ff 90       	pop	r15
    1026:	0f 91       	pop	r16
    1028:	1f 91       	pop	r17
    102a:	cf 91       	pop	r28
    102c:	df 91       	pop	r29
    102e:	99 27       	eor	r25, r25
    1030:	87 fd       	sbrc	r24, 7
    1032:	90 95       	com	r25
    1034:	08 95       	ret

00001036 <__prologue_saves__>:
    1036:	2f 92       	push	r2
    1038:	3f 92       	push	r3
    103a:	4f 92       	push	r4
    103c:	5f 92       	push	r5
    103e:	6f 92       	push	r6
    1040:	7f 92       	push	r7
    1042:	8f 92       	push	r8
    1044:	9f 92       	push	r9
    1046:	af 92       	push	r10
    1048:	bf 92       	push	r11
    104a:	cf 92       	push	r12
    104c:	df 92       	push	r13
    104e:	ef 92       	push	r14
    1050:	ff 92       	push	r15
    1052:	0f 93       	push	r16
    1054:	1f 93       	push	r17
    1056:	cf 93       	push	r28
    1058:	df 93       	push	r29
    105a:	cd b7       	in	r28, 0x3d	; 61
    105c:	de b7       	in	r29, 0x3e	; 62
    105e:	ca 1b       	sub	r28, r26
    1060:	db 0b       	sbc	r29, r27
    1062:	0f b6       	in	r0, 0x3f	; 63
    1064:	f8 94       	cli
    1066:	de bf       	out	0x3e, r29	; 62
    1068:	0f be       	out	0x3f, r0	; 63
    106a:	cd bf       	out	0x3d, r28	; 61
    106c:	09 94       	ijmp

0000106e <__epilogue_restores__>:
    106e:	2a 88       	ldd	r2, Y+18	; 0x12
    1070:	39 88       	ldd	r3, Y+17	; 0x11
    1072:	48 88       	ldd	r4, Y+16	; 0x10
    1074:	5f 84       	ldd	r5, Y+15	; 0x0f
    1076:	6e 84       	ldd	r6, Y+14	; 0x0e
    1078:	7d 84       	ldd	r7, Y+13	; 0x0d
    107a:	8c 84       	ldd	r8, Y+12	; 0x0c
    107c:	9b 84       	ldd	r9, Y+11	; 0x0b
    107e:	aa 84       	ldd	r10, Y+10	; 0x0a
    1080:	b9 84       	ldd	r11, Y+9	; 0x09
    1082:	c8 84       	ldd	r12, Y+8	; 0x08
    1084:	df 80       	ldd	r13, Y+7	; 0x07
    1086:	ee 80       	ldd	r14, Y+6	; 0x06
    1088:	fd 80       	ldd	r15, Y+5	; 0x05
    108a:	0c 81       	ldd	r16, Y+4	; 0x04
    108c:	1b 81       	ldd	r17, Y+3	; 0x03
    108e:	aa 81       	ldd	r26, Y+2	; 0x02
    1090:	b9 81       	ldd	r27, Y+1	; 0x01
    1092:	ce 0f       	add	r28, r30
    1094:	d1 1d       	adc	r29, r1
    1096:	0f b6       	in	r0, 0x3f	; 63
    1098:	f8 94       	cli
    109a:	de bf       	out	0x3e, r29	; 62
    109c:	0f be       	out	0x3f, r0	; 63
    109e:	cd bf       	out	0x3d, r28	; 61
    10a0:	ed 01       	movw	r28, r26
    10a2:	08 95       	ret

000010a4 <_exit>:
    10a4:	f8 94       	cli

000010a6 <__stop_program>:
    10a6:	ff cf       	rjmp	.-2      	; 0x10a6 <__stop_program>
